{"version":3,"sources":["redux/ActionTypes.jsx","redux/Reducer.jsx","redux/store.jsx","utils/utils.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Swiper/Swiper.jsx","pages/HomePage/HomePage.jsx","pages/Login/Login.jsx","pages/Page404/index.js","pages/Page404/Page404.jsx","pages/Product/Product.jsx","routes/Routes.jsx","routes/context/Context.js","routes/MainPage.jsx","reportWebVitals.js","index.js"],"names":["LOGINUSER","LOGOUT","setToastMessage","props","document","body","message","status","statusMark","className","aria-hidden","Fragment","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Reducer","state","action","type","userDetails","payload","console","log","persistConfig","key","storage","persistedReducer","persistReducer","createStoreWithPersistedReducer","createStore","reduxStore","store","persistore","persistStore","useDate","locale","React","useState","Date","today","setDate","useEffect","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","date","getDate","month","hour","getHours","wish","time","toLocaleTimeString","hour12","minute","get","Header","getState","userDetail","Navbar","fixed","bg","variant","expand","to","Brand","Toggle","aria-controls","Collapse","id","Nav","style","maxHeight","navbarScroll","Link","href","NavDropdown","title","Divider","Item","isEmpty","color","Button","onClick","dispatch","Form","FormControl","placeholder","aria-label","Footer","Container","Row","Col","SwiperComponent","slidesPerView","spaceBetween","pagination","clickable","autoHeight","loop","height","SwiperCore","use","Pagination","HomePage","loginSchema","Yup","shape","username","min","max","required","password","LoginForm","useFetch","post","response","loading","error","HandleSignIn","formData","a","postResponse","toLowerCase","token","history","push","lg","initialValues","validationSchema","onSubmit","touched","errors","FormGroup","FormLabel","htmlFor","name","email","component","Page404","Product","Routes","exact","path","ContextProvider","createContext","Provider","MainPage","theme","setTheme","persistor","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e616217.chunk.js","sourcesContent":["import { toast, ToastContainer } from \"react-toastify\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\n\r\nexport const DOMAINPATH = \"/PlatyPlus\";\r\nexport const API_END_POINT = \"https://fakestoreapi.com\";\r\nexport const LOGINUSER = \"LOGINUSER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const setToastMessage = (props) => {\r\n  ReactDOM.createPortal(<ToastContainer />, document.body);\r\n\r\n  const { message, status } = props;\r\n  const statusMark =\r\n    status === \"success\" ? (\r\n      <i className={\"fa fa-check mr-2\"} aria-hidden={true} />\r\n    ) : status === \"fail\" ? (\r\n      <i className={\"fas fa-times mr-2\"} aria-hidden={true} />\r\n    ) : status === \"warning\" ? (\r\n      <i className={\"fas fa-exclamation-triangle mr-2\"} aria-hidden={true} />\r\n    ) : (\r\n      <React.Fragment />\r\n    );\r\n\r\n  toast.dark(\r\n    <p className=\"mb-0\">\r\n      {statusMark}\r\n      {message}\r\n    </p>,\r\n    {\r\n      position: \"bottom-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      className: `${status}`,\r\n    }\r\n  );\r\n};\r\n","import { LOGINUSER, LOGOUT } from \"./ActionTypes\";\r\nimport { APICall } from \"../api/APICall\";\r\n\r\nconst callAPI = async () => {\r\n  return await APICall();\r\n};\r\n\r\nconst Reducer = (state = {}, action = {}) => {\r\n  switch (action.type) {\r\n    case LOGINUSER: {\r\n      return {\r\n        userDetails: { ...action.payload },\r\n        ...state,\r\n      };\r\n    }\r\n    case LOGOUT:\r\n      console.log(\"state b4\", state);\r\n      delete state.userDetails;\r\n      console.log(\"state at\", state);\r\n\r\n      return state;\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import { createStore } from \"redux\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport Reducer from \"./Reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, Reducer);\r\nlet createStoreWithPersistedReducer = createStore(persistedReducer);\r\n//https://www.npmjs.com/package/redux-persist\r\nlet persistore = persistStore(createStoreWithPersistedReducer);\r\n\r\nconst reduxStore = { store: createStoreWithPersistedReducer, persistore };\r\nexport default reduxStore;\r\n","import React from \"react\";\r\n\r\nexport const useDate = () => {\r\n  const locale = \"en\";\r\n  const [today, setDate] = React.useState(new Date()); // Save the current date to be able to trigger an update\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      // Creates an interval which will update the current data every minute\r\n      // This will trigger a rerender every component that uses the useDate hook.\r\n      setDate(new Date());\r\n    }, 60 * 1000);\r\n    return () => {\r\n      clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n    };\r\n  }, []);\r\n\r\n  const day = today.toLocaleDateString(locale, { weekday: \"long\" });\r\n  const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, {\r\n    month: \"long\",\r\n  })}\\n\\n`;\r\n\r\n  const hour = today.getHours();\r\n  const wish = `Good ${\r\n    (hour < 12 && \"Morning\") || (hour < 17 && \"Afternoon\") || \"Evening\"\r\n  }, `;\r\n\r\n  const time = today.toLocaleTimeString(locale, {\r\n    hour: \"numeric\",\r\n    hour12: true,\r\n    minute: \"numeric\",\r\n  });\r\n\r\n  return {\r\n    date,\r\n    time,\r\n    wish,\r\n  };\r\n};\r\n","import get from \"get-value\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport reduxStore from \"../../redux/store\";\r\nimport { useDate } from \"../../utils/utils\";\r\nimport { isEmpty } from \"lodash\";\r\nimport \"./styles.scss\";\r\n\r\nconst store = get(reduxStore, \"store\", {});\r\nconst Header = () => {\r\n  useEffect(() => {\r\n    console.log(\"store at update \", store.getState());\r\n  });\r\n  const userDetail = get(store.getState(), \"userDetails\", {});\r\n  const wish = useDate().wish;\r\n  return (\r\n    <header>\r\n      <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Link to=\"/PlatyPlus\">\r\n          <Navbar.Brand>PlatyPlus</Navbar.Brand>\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse className=\"justify-space-between\" id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"mr-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: \"100px\" }}\r\n            navbarScroll\r\n          >\r\n            <Nav.Link href=\"#action2\"></Nav.Link>\r\n            <NavDropdown title=\"Categories\" id=\"navbarScrollingDropdown\">\r\n              <Link className=\"dropdown-item\" to=\"/PlatyPlus/product/test\">\r\n                Category #1\r\n              </Link>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action4\">Category #2</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action5\">Category #3</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          {isEmpty(userDetail) ? (\r\n            <Link to=\"/PlatyPlus/login\">\r\n              <Navbar.Brand>Login</Navbar.Brand>\r\n            </Link>\r\n          ) : (\r\n            <React.Fragment>\r\n              <p className=\"my-auto mr-2\" style={{ color: \"white\" }}>\r\n                {wish + \" Praveen\"}\r\n              </p>\r\n              <Button\r\n                className=\"mr-2\"\r\n                variant=\"outline-light\"\r\n                onClick={() => store.dispatch({ type: \"LOGOUT\" })}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n          <Form className=\"d-flex\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"outline-light\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Container,\r\n  Navbar,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport \"./styles.scss\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDate } from \"../../utils/utils\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer className=\"main-footer bg-dark\">\r\n      <Container>\r\n        <Navbar variant=\"dark\">\r\n          <Nav className=\"w-100\">\r\n            <Row className=\"d-flex w-100 text-center\">\r\n              <Col>\r\n                <Nav.Link>{useDate().date + \" \" + useDate().time}</Nav.Link>\r\n              </Col>\r\n              <Col>\r\n                <ul className=\"list-inline social-buttons\">\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-facebook-f\"></i>{\" \"}\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-linkedin-in\"></i>{\" \"}\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                </ul>{\" \"}\r\n              </Col>\r\n            </Row>\r\n          </Nav>\r\n        </Navbar>\r\n      </Container>\r\n      <ToastContainer />\r\n    </footer>\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\n\r\nimport \"./styles.scss\";\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, { Pagination } from \"swiper/core\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Pagination]);\r\n\r\nexport default function SwiperComponent() {\r\n  return (\r\n    <React.Fragment>\r\n      <Swiper\r\n        slidesPerView={2}\r\n        spaceBetween={30}\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n        autoHeight={true}\r\n        loop={true}\r\n        className=\"mySwiper\"\r\n      >\r\n        <SwiperSlide>\r\n          <div style={{ height: \"250px\" }}>Slide 1</div>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n          <div style={{ height: \"250px\" }}>Slide 4</div>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n          <div style={{ height: \"250px\" }}>Slide 5</div>\r\n        </SwiperSlide>\r\n      </Swiper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SwiperComponent from \"../../components/Swiper/Swiper\";\r\nimport \"./styles.scss\";\r\n\r\nconst HomePage = (props) => {\r\n  useEffect(() => {\r\n    document.title = \"Welcome User\";\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <div>Welcome to Home</div>\r\n      <SwiperComponent />\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  FormLabel,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport reduxStore from \"../../redux/store\";\r\nimport {\r\n  API_END_POINT,\r\n  DOMAINPATH,\r\n  setToastMessage,\r\n} from \"../../redux/ActionTypes\";\r\nimport useFetch from \"use-http\";\r\nimport get from \"get-value\";\r\n\r\nconst store = get(reduxStore, \"store\", {});\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(5, \"Password is too short - should be 5 chars minimum.\"),\r\n});\r\n\r\nexport function LoginForm(props) {\r\n  const { post, response, loading, error } = useFetch(API_END_POINT);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login to PlatyPlus\";\r\n  }, []);\r\n\r\n  const HandleSignIn = async (formData) => {\r\n    const postResponse = await post(\"auth/login\", formData);\r\n    if (\r\n      get(response, \"ok\", true) &&\r\n      get(postResponse, \"status\", \"\").toLowerCase() !== \"error\"\r\n    ) {\r\n      store.dispatch({\r\n        type: \"LOGINUSER\",\r\n        payload: {\r\n          username: get(formData, \"username\", \"\"),\r\n          token: get(postResponse, \"token\", \"\"),\r\n        },\r\n      });\r\n      setToastMessage({\r\n        status: \"success\",\r\n        message: \"Login SuccessFully\",\r\n      });\r\n      props.history.push(DOMAINPATH);\r\n    } else {\r\n      setToastMessage({\r\n        status: \"fail\",\r\n        message: \"Login Failed !!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <h1 className=\"mt-5 text-center\">Welcome</h1>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col lg=\"6\">\r\n          <Formik\r\n            initialValues={{ username: \"johnd\", password: \"m38rmF$\" }}\r\n            validationSchema={loginSchema}\r\n            onSubmit={HandleSignIn}\r\n          >\r\n            {({ touched, errors }) => (\r\n              <Form>\r\n                <FormGroup>\r\n                  <FormLabel htmlFor=\"username\">User Name</FormLabel>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Enter user name\"\r\n                    className={`form-control ${\r\n                      touched.email && errors.email ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage\r\n                    component=\"div\"\r\n                    name=\"username\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                  <Field\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    className={`form-control ${\r\n                      touched.password && errors.password ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage\r\n                    component=\"div\"\r\n                    name=\"password\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Button variant=\"outline-dark\" type=\"submit\" className=\"w-100\">\r\n                  {loading ? \"Loading...\" : \"Submit\"}\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import Page404 from \"./Page404\";\r\nexport default Page404;\r\n","import React from \"react\";\r\nconst Page404 = (props) => {\r\n  console.log(\"props \", props);\r\n  return <h1>404 </h1>;\r\n};\r\nexport default Page404;\r\n","import React from \"react\";\r\nconst Product = (props) => {\r\n  return <div>Product</div>;\r\n};\r\nexport default Product;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"../pages/HomePage/HomePage\";\r\nimport { LoginForm } from \"../pages/Login/Login\";\r\nimport Page404 from \"../pages/Page404\";\r\nimport Product from \"../pages/Product/Product\";\r\n\r\n// const LoadableComponent = loadable((props) => import(`../pages/${props.path}`));\r\n\r\n// const routerChildren = () => {\r\n//   const routeChild = pathParams.map((pathWay, index) => {\r\n//     const exactPath = get(pathWay, \"exact\", false);\r\n//     return (\r\n//       <Route\r\n//         exact={exactPath}\r\n//         key={index}\r\n//         path={pathWay?.path}\r\n//         render={(routerProps) => {\r\n//           return <LoadableComponent path={pathWay.pageName} {...routerProps} />;\r\n//         }}\r\n//       />\r\n//     );\r\n//   });\r\n//   routeChild.push(<Route key={pathParams.length} component={Page404} />);\r\n//   return routeChild;\r\n// };\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div className=\"route-content\">\r\n      <Switch>\r\n        <Route exact path=\"/PlatyPlus\" component={HomePage} />\r\n        <Route exact path=\"/PlatyPlus/product/:d\" component={Product} />\r\n        <Route exact path=\"/PlatyPlus/login\" component={LoginForm} />\r\n        <Route path=\"*\" component={Page404} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nconst Context = React.createContext();\r\nexport const ContextProvider = Context.Provider;\r\nexport default ContextProvider;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Header from \"../components/Header/Header\";\r\nimport { Footer } from \"../components/Footer/Footer\";\r\nimport Routes from \"./Routes\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxStore from \"../redux/store\";\r\nimport ContextProvider from \"./context/Context\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst MainPage = (props) => {\r\n  const [theme, setTheme] = React.useState(\"normal\");\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={reduxStore.store}>\r\n        <PersistGate loading={null} persistor={reduxStore.persistore}>\r\n          <ContextProvider value={{ theme, setTheme }}>\r\n            <Header />\r\n            <Routes />\r\n            <Footer />\r\n          </ContextProvider>\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default MainPage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport MainPage from \"./routes/MainPage\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainPage />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}