{"version":3,"sources":["redux/ActionTypes.jsx","redux/Reducer.jsx","redux/store.jsx","utils/utils.jsx","routes/context/Context.js","components/Header/CategoryNavBar.jsx","components/Header/GetCategory.jsx","assets/svg/index.js","redux/Actions.jsx","components/CartProductList/CartProductList.jsx","components/Header/CartOverlay/CartOverlay.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/ProductInfo/ProductInfo.jsx","pages/PLP/PLP.jsx","components/Swiper/Swiper.jsx","components/Recommendations/Recommendations.jsx","pages/HomePage/HomePage.jsx","pages/Login/Login.jsx","pages/Page404/index.js","pages/Page404/Page404.jsx","pages/Product/ProductLeftPart.jsx","pages/Product/ProductRightPart.jsx","pages/Product/Product.jsx","components/AddressForm/AddressForm.jsx","components/AddressForm/index.js","components/Payment/PaymentSection.jsx","pages/Checkout/Checkout.jsx","routes/Routes.jsx","routes/MainPage.jsx","reportWebVitals.js","index.js"],"names":["DOMAINPATH","API_END_POINT","LOGINUSER","LOGOUT","INCREASE_QUANTITY","DECREASE_QUANTITY","GET_ALL_CART_PRODUCTS","GET_NUMBER_CART","ADD_CART","DELETE_CART","initState","numberCart","Carts","userDetails","Reducer","state","action","type","ACTIONSTATES","payload","products","Cart","cart","id","quantity","name","title","image","price","push","check","forEach","item","idx","newItem","JSON","parse","stringify","currentProduct","get","existingCart","currentProductInStore","find","data","productQuantity","filter","persistConfig","key","storage","persistedReducer","persistReducer","createStoreWithPersistedReducer","createStore","reduxStore","store","persistore","persistStore","useDate","locale","React","useState","Date","today","setDate","useEffect","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","date","getDate","month","hour","getHours","wish","time","toLocaleTimeString","hour12","minute","setToastMessage","props","document","body","message","status","statusMark","className","aria-hidden","Fragment","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","ContextData","createContext","ContextDataProvider","Provider","CategoryNavBar","categoryList","context","useContext","contextData","setCategoryList","useFetch","getResponse","response","getAllCategory","a","categoryListResponse","ok","setContextObj","GetCategory","Nav","navbarScroll","NavDropdown","map","index","to","encodeURIComponent","Link","LoadingSpinner","version","xmlns","x","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeWidth","strokeMiterlimit","strokeDasharray","cx","cy","r","attributeName","attributeType","dur","from","repeatCount","width","height","values","begin","ImageLoadingHolder","transform","CartIcon","disableOtherIcon","rx","strokeLinecap","strokeLinejoin","d","DeleteCart","IncreaseQuantity","DecreaseQuantity","QuantityBox","quantityValue","cartItem","increaseProductQty","decreaseProductQty","Button","onClick","disabled","variant","FormControl","value","readOnly","connect","cartProduct","dispatch","showTitle","showImage","showCartIndex","isCheckOut","columnWidth","cartProducts","deleteProductFromCart","cartTotal","totalPrice","priceFormat","toFixed","Number","reduce","acc","modifiedPrice","Container","Row","Col","md","productUnitPrice","productTotalPrice","placeholder","debounce","once","Image","src","alt","EmptyCartBody","process","cartCount","toShowCart","setToShowCart","Modal","backdrop","keyboard","show","onHide","dialogClassName","aria-labelledby","centered","Header","closeButton","Title","Body","price1","price2","Footer","as","headerHeight","setHeaderHeight","headerHeightNew","querySelector","offsetHeight","style","Navbar","fixed","expand","Brand","Toggle","aria-controls","Collapse","isEmpty","color","ProductInfo","imageSrc","description","Card","Subtitle","PLP","categoryResponse","setCategoryResponse","getContextData","loading","categoryListFromContext","categoryId","decodeURIComponent","getCategoryResponse","Accordion","defaultActiveKey","eventKey","categoryName","flexGrow","CardDeck","SwiperComponent","imageLoaded","setImageLoaded","swiperProps","lazyProps","children","isLoop","isLazy","imageDelay","pagination","clickable","autoplay","navigation","loop","lazy","autoHeight","effect","imageLink","onLoad","setTimeout","SwiperCore","use","Autoplay","Navigation","EffectCoverflow","EffectFade","Pagination","Recommendations","recommendationsResponse","setRecommendationsResponse","getRecommendationsResponse","productsResponse","swiperChildren","length","imgSrc","href","coverflowEffect","grabCursor","centeredSlides","slidesPerView","rotate","stretch","depth","modifier","slideShadows","mainBanner","HomePage","autoPlay","delay","disableOnInteraction","loginSchema","Yup","shape","username","min","max","required","password","LoginForm","post","error","HandleSignIn","formData","postResponse","toLowerCase","token","history","lg","initialValues","validationSchema","onSubmit","touched","errors","FormGroup","FormLabel","htmlFor","email","component","Page404","console","log","ProductLeftPart","productResponse","fallBackImage","AddCart","salePrice","originalPrice","renderPrice","addToCartDom","classList","add","remove","addToCart","addToCartButtonClick","Product","setProductResponse","productId","getProductResponse","propsToPass","Breadcrumb","Item","active","renderBreadCrumb","sm","schema","firstName","lastName","address","address2","city","zip","terms","oneOf","AddressForm","prefillData","formikProps","setSubmitting","resetForm","onAddressSubmit","handleSubmit","handleChange","handleBlur","isValid","isSubmitting","Form","maxWidth","Group","controlId","Label","Control","onChange","onBlur","isInvalid","Feedback","aria-describedby","Check","label","checked","feedback","CARD_OPTIONS","iconStyle","base","iconColor","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","CardField","options","Field","autoComplete","SubmitButton","processing","ErrorMessage","role","ResetButton","CheckoutForm","stripe","useStripe","elements","useElements","setError","cardComplete","setCardComplete","setProcessing","paymentMethod","setPaymentMethod","phone","billingDetails","setBillingDetails","event","preventDefault","getElement","focus","createPaymentMethod","card","CardElement","billing_details","e","target","complete","ELEMENTS_OPTIONS","fonts","cssSrc","stripePromise","loadStripe","PaymentSection","Checkout","activeIndex","setActiveIndex","addressData","setAddressData","reviewItemProps","fromCheckOut","renderCheckOutSection","SwitchTransition","transitionName","mode","transitionEnterTimeout","transitionLeaveTimeout","CSSTransition","addEndListener","node","done","addEventListener","classNames","Routes","exact","path","MainPage","contextObj","persistor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+jBAAaA,EAAa,aACbC,EAAgB,2BAEhBC,EAAY,YACZC,EAAS,SAETC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAW,WAEXC,EAAc,cCTrBC,EAAY,CAChBC,WAAY,EACZC,MAAO,GACPC,YAAa,IA+GAC,EA5GC,WAAqC,IAApCC,EAAmC,uDAA3BL,EAAWM,EAAgB,uDAAP,GAC3C,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IAEEF,YAAY,eAAMG,EAAOG,WAG7B,KAAKD,EAEH,cADOH,EAAMF,YACN,eAAKE,GAEd,KAAKG,EACH,OAAO,2BACFH,GADL,IAEEK,SAAUJ,EAAOG,UAGrB,KAAKD,EACH,OAAO,eACFH,GAGP,KAAKG,EACH,IAAMG,EAAON,EAAMH,OAAS,GAC5B,GAAyB,IAArBG,EAAMJ,WAAkB,CAC1B,IAAIW,EAAO,CACTC,GAAIP,EAAOG,QAAQI,GACnBC,SAAU,EACVC,KAAMT,EAAOG,QAAQO,MACrBC,MAAOX,EAAOG,QAAQQ,MACtBC,MAAOZ,EAAOG,QAAQS,OAExBP,EAAKQ,KAAKP,OACL,CACL,IAAIQ,GAAQ,EAQZ,GAPAT,EAAKU,SAAQ,SAACC,EAAMC,GACdD,EAAKT,KAAOP,EAAOG,QAAQI,KAC7BF,EAAKY,GAAKT,WACVM,GAAQ,OAIPA,EAAO,CACV,IAAMI,EAAU,CACdX,GAAIP,EAAOG,QAAQI,GACnBC,SAAU,EACVC,KAAMT,EAAOG,QAAQO,MACrBC,MAAOX,EAAOG,QAAQQ,MACtBC,MAAOZ,EAAOG,QAAQS,OAExBP,EAAKQ,KAAKK,IAGd,OAAO,2BACFC,KAAKC,MAAMD,KAAKE,UAAUtB,KAD/B,IAEEJ,WAAYI,EAAMJ,WAAa,IAInC,KAAKO,EACH,IAAMoB,EAAiBC,IAAIvB,EAAQ,UAAW,IACxCwB,EAAeD,IAAIxB,EAAO,QAAS,IACnC0B,EAAwBD,EAAaE,MACzC,SAACC,GAAD,OAAUA,EAAKpB,KAAOe,EAAef,MAIvC,OAFAkB,EAAsBjB,WACtBT,EAAMJ,aACC,eACFwB,KAAKC,MAAMD,KAAKE,UAAUtB,KAGjC,KAAKG,EACH,IAAMoB,EAAiBC,IAAIvB,EAAQ,UAAW,IACxCwB,EAAeD,IAAIxB,EAAO,QAAS,IACnC0B,EAAwBD,EAAaE,MACzC,SAACC,GAAD,OAAUA,EAAKpB,KAAOe,EAAef,MAMvC,OAJIkB,EAAsBjB,SAAW,IACnCiB,EAAsBjB,WACtBT,EAAMJ,cAED,eACFwB,KAAKC,MAAMD,KAAKE,UAAUtB,KAIjC,KAAKG,EACH,IAAMoB,EAAiBC,IAAIvB,EAAQ,UAAW,IACxCwB,EAAeD,IAAIxB,EAAO,QAAS,IACnC0B,EAAwBD,EAAaE,MACzC,SAACC,GAAD,OAAUA,EAAKpB,KAAOe,EAAef,MAEjCqB,EAAkBL,IAAIE,EAAuB,WAAY,GAC/D,OAAO,2BACFN,KAAKC,MAAMD,KAAKE,UAAUtB,KAD/B,IAEEJ,WAAYI,EAAMJ,WAAaiC,EAC/BhC,MAAOG,EAAMH,MAAMiC,QAAO,SAACb,GACzB,OAAOA,EAAKT,KAAOkB,EAAsBlB,QAI/C,QACE,OAAO,eAAKR,KC3GZ+B,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAmBC,YAAeJ,EAAehC,GACjDqC,EAAkCC,YAAYH,GAMrCI,EADI,CAAEC,MAAOH,EAAiCI,WAF1CC,YAAaL,I,eCVnBM,EAAU,WACrB,IAAMC,EAAS,KADY,EAEFC,IAAMC,SAAS,IAAIC,MAFjB,mBAEpBC,EAFoB,KAEbC,EAFa,KAI3BJ,IAAMK,WAAU,WACd,IAAMC,EAAQC,aAAY,WAGxBH,EAAQ,IAAIF,QACX,KACH,OAAO,WACLM,cAAcF,MAEf,IAEH,IAAMG,EAAMN,EAAMO,mBAAmBX,EAAQ,CAAEY,QAAS,SAClDC,EAAI,UAAMH,EAAN,aAAcN,EAAMU,UAApB,YAAiCV,EAAMO,mBAAmBX,EAAQ,CAC1Ee,MAAO,SADC,QAIJC,EAAOZ,EAAMa,WACbC,EAAI,gBACPF,EAAO,GAAM,UAAeA,EAAO,IAAM,cAAgB,UADlD,MAUV,MAAO,CACLH,OACAM,KARWf,EAAMgB,mBAAmBpB,EAAQ,CAC5CgB,KAAM,UACNK,QAAQ,EACRC,OAAQ,YAMRJ,SAISK,EAAkB,SAACC,GACP,IAAmBC,SAASC,KADX,IAGhCC,EAAoBH,EAApBG,QAASC,EAAWJ,EAAXI,OACXC,EACO,YAAXD,EACE,mBAAGE,UAAW,mBAAoBC,eAAa,IAClC,SAAXH,EACF,mBAAGE,UAAW,oBAAqBC,eAAa,IACnC,YAAXH,EACF,mBAAGE,UAAW,mCAAoCC,eAAa,IAE/D,cAAC,IAAMC,SAAP,IAGJC,IAAMC,KACJ,oBAAGJ,UAAU,OAAb,UACGD,EACAF,KAEH,CACEQ,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXV,UAAU,GAAD,OAAKF,M,2DCpEda,EAAcxC,IAAMyC,cAAc,IAC3BC,EAAsBF,EAAYG,SAChCH,ICIFI,G,OAAiB,WAC5B,IAAMC,ECDmB,WACzB,IAAMC,EAAUC,qBAAWP,GACrBQ,EAAcpE,IAAIkE,EAAS,aAAc,IAFhB,EAGS9C,IAAMC,SAAS,IAHxB,mBAGxB4C,EAHwB,KAGVI,EAHU,OAIQC,YAAS5G,GAAnC6G,EAJkB,EAIvBvE,IAAkBwE,EAJK,EAILA,SAE1BpD,IAAMK,WAAU,WACdgD,MACC,IAEH,IAAMA,EAAc,uCAAG,4BAAAC,EAAA,sEACcH,EAAY,wBAD1B,OACfI,EADe,OAEjBH,EAASI,KACXR,EAAW,aAAmBO,EAC9BT,EAAQW,cAAcT,GACtBC,EAAgBM,IALG,2CAAH,qDASpB,OAAOV,EDlBca,GACrB,OACE,cAACC,EAAA,EAAD,CAAK9B,UAAU,yCAAyC+B,cAAY,EAApE,SACE,cAACC,EAAA,EAAD,CAAa9F,MAAM,WAAWH,GAAI,0BAAlC,gBACGiF,QADH,IACGA,OADH,EACGA,EAAciB,KAAI,SAAC9E,EAAM+E,GACxB,OACE,cAAC,gBAAD,CAEEC,GAAE,UAAK3H,EAAL,qBAA4B4H,mBAAmBjF,IAFnD,SAIE,cAAC2E,EAAA,EAAIO,KAAL,CAAUrC,UAAU,uBAApB,SAA4C7C,KAHvCA,EAAO+E,Y,kBEbbI,EAAiB,SAAC5C,GAC7B,IAAMM,EAAYjD,IAAI2C,EAAO,YAAa,IAC1C,OACE,qBAAKM,UAAWA,EAAhB,SACE,sBACEuC,QAAQ,MACRxG,GAAG,KACHyG,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,iBAAiB,kBACjBC,SAAS,WARX,UAUE,wBACEC,KAAK,OACLC,OAAO,QACPC,YAAY,IACZC,iBAAiB,KACjBC,gBAAgB,kBAChBC,GAAG,KACHC,GAAG,KACHC,EAAE,KARJ,SAUE,kCACEC,cAAc,YACdC,cAAc,MACd9H,KAAK,SACL+H,IAAI,KACJC,KAAK,UACLtB,GAAG,YACHuB,YAAY,iBAGhB,wBACEZ,KAAK,OACLC,OAAO,QACPC,YAAY,IACZC,iBAAiB,KACjBC,gBAAgB,QAChBC,GAAG,KACHC,GAAG,KACHC,EAAE,KARJ,SAUE,kCACEC,cAAc,YACdC,cAAc,MACd9H,KAAK,SACL+H,IAAI,KACJC,KAAK,UACLtB,GAAG,aACHuB,YAAY,iBAGhB,oBAAGZ,KAAK,UAAR,UACE,sBAAML,EAAE,KAAKC,EAAE,KAAKiB,MAAM,IAAIC,OAAO,KAAKd,KAAK,QAA/C,SACE,kCACEQ,cAAc,YACdE,IAAI,KACJ/H,KAAK,YACLoI,OAAO,kBACPH,YAAY,aACZI,MAAM,UAGV,sBAAMrB,EAAE,KAAKC,EAAE,KAAKiB,MAAM,IAAIC,OAAO,KAAKd,KAAK,QAA/C,SACE,kCACEQ,cAAc,YACdE,IAAI,KACJ/H,KAAK,YACLoI,OAAO,kBACPH,YAAY,aACZI,MAAM,UAGV,sBAAMrB,EAAE,KAAKC,EAAE,KAAKiB,MAAM,IAAIC,OAAO,KAAKd,KAAK,QAA/C,SACE,kCACEQ,cAAc,YACdE,IAAI,KACJ/H,KAAK,YACLoI,OAAO,kBACPH,YAAY,aACZI,MAAM,UAGV,sBAAMrB,EAAE,KAAKC,EAAE,KAAKiB,MAAM,IAAIC,OAAO,KAAKd,KAAK,QAA/C,SACE,kCACEQ,cAAc,YACdE,IAAI,KACJ/H,KAAK,YACLoI,OAAO,kBACPH,YAAY,aACZI,MAAM,UAGV,sBAAMrB,EAAE,KAAKC,EAAE,KAAKiB,MAAM,IAAIC,OAAO,KAAKd,KAAK,QAA/C,SACE,kCACEQ,cAAc,YACdE,IAAI,KACJ/H,KAAK,YACLoI,OAAO,kBACPH,YAAY,aACZI,MAAM,mBAQPC,GAAqB,SAACrE,GACjC,IAAMM,EAAYjD,IAAI2C,EAAO,YAAa,IAE1C,OACE,qBAAKM,UAAWA,EAAhB,SACE,sBACEuC,QAAQ,MACRxG,GAAG,UACHyG,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,iBAAiB,kBACjBC,SAAS,WARX,UAUE,sBACEC,KAAK,OACLa,MAAM,IACNC,OAAO,MACPI,UAAU,gCAJZ,SAME,yBACEV,cAAc,SACdC,cAAc,MACdC,IAAI,KACJK,OAAO,cACPH,YAAY,iBAGhB,sBACEjB,EAAE,KACFK,KAAK,OACLa,MAAM,IACNC,OAAO,MACPI,UAAU,iCALZ,SAOE,yBACEV,cAAc,SACdC,cAAc,MACdC,IAAI,KACJK,OAAO,cACPH,YAAY,aACZI,MAAM,WAGV,sBACErB,EAAE,KACFK,KAAK,OACLa,MAAM,IACNC,OAAO,MACPI,UAAU,iCALZ,SAOE,yBACEV,cAAc,SACdC,cAAc,MACdC,IAAI,KACJK,OAAO,cACPH,YAAY,aACZI,MAAM,WAGV,sBACErB,EAAE,KACFK,KAAK,OACLa,MAAM,IACNC,OAAO,MACPI,UAAU,iCALZ,SAOE,yBACEV,cAAc,SACdC,cAAc,MACdC,IAAI,KACJK,OAAO,cACPH,YAAY,aACZI,MAAM,WAGV,sBACErB,EAAE,KACFK,KAAK,OACLa,MAAM,IACNC,OAAO,MACPI,UAAU,iCALZ,SAOE,yBACEV,cAAc,SACdC,cAAc,MACdC,IAAI,KACJK,OAAO,cACPH,YAAY,aACZI,MAAM,iBAOLG,GAAW,SAACvE,GACvB,IAAMwE,EAAmBnH,IAAI2C,EAAO,oBAAoB,GACxD,OACE,sCACIwE,GACA,qBACElE,UAAU,wBACV2D,MAAM,KACNC,OAAO,KACPjB,QAAQ,YACRG,KAAK,OACLN,MAAM,6BANR,SAQE,sBAAMmB,MAAM,KAAKC,OAAO,KAAKO,GAAG,IAAIrB,KAAK,eAG3CoB,GACA,qBACElE,UAAU,wBACV2D,MAAM,KACNC,OAAO,KACPjB,QAAQ,YACRG,KAAK,OACLN,MAAM,6BANR,SAQE,sBAAMmB,MAAM,KAAKC,OAAO,KAAKO,GAAG,IAAIrB,KAAK,cAG7C,sBACE9C,UAAU,YACVwC,MAAM,6BACNmB,MAAM,KACNC,OAAO,KACPjB,QAAQ,YACRG,KAAK,OACLC,OAAO,UACPC,YAAY,IACZoB,cAAc,QACdC,eAAe,QAVjB,UAYE,wBAAQlB,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,wBAAQF,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMiB,EAAE,wEAERJ,GACA,sBACElE,UAAU,OACVwC,MAAM,6BACNmB,MAAM,KACNC,OAAO,KACPjB,QAAQ,YALV,UAOE,sBAAMG,KAAK,OAAOwB,EAAE,oBACpB,sBACExB,KAAK,UACLwB,EAAE,sPC5OP,SAASC,GAAW5I,GACzB,MAAO,CACLF,KAAMC,EACNC,WAIG,SAAS6I,GAAiB7I,GAC/B,MAAO,CACLF,KAAMC,EACNC,WAGG,SAAS8I,GAAiB9I,GAC/B,MAAO,CACLF,KAAMC,EACNC,W,gECzBE+I,GAAc,SAAChF,GACnB,IAAMiF,EAAgB5H,IAAI2C,EAAO,WAAY,GACvCkF,EAAW7H,IAAI2C,EAAO,OAAQ,GAC9BmF,EAAqB9H,IAAI2C,EAAO,oBAAoB,eACpDoF,EAAqB/H,IAAI2C,EAAO,oBAAoB,eAC1D,OACE,sBAAKM,UAAU,wBAAf,UACE,cAAC+E,EAAA,EAAD,CACE/E,UAAU,0CACVgF,QAAS,kBAAMF,EAAmBF,IAClCK,SAA4B,IAAlBN,EACVO,QAAQ,eAJV,SAMG,MAEH,cAACC,GAAA,EAAD,CACEnF,UAAU,qBACVvE,KAAM,OACN2J,MAAOT,EACPU,UAAQ,IAEV,cAACN,EAAA,EAAD,CACE/E,UAAU,2CACVgF,QAAS,kBAAMH,EAAmBD,IAClCK,SAA4B,KAAlBN,EACVO,QAAQ,eAJV,SAMG,UA4JMI,oBAdf,SAAyB/J,GACvB,MAAO,CACLgK,YAAW,OAAEhK,QAAF,IAAEA,OAAF,EAAEA,EAAOH,UAIxB,SAA4BoK,GAC1B,MAAO,CACLhB,iBAAkB,SAAChI,GAAD,OAAUgJ,EAAShB,GAAiBhI,KACtDiI,iBAAkB,SAACjI,GAAD,OAAUgJ,EAASf,GAAiBjI,KACtD+H,WAAY,SAAC/H,GAAD,OAAUgJ,EAASjB,GAAW/H,QAI/B8I,EAtJS,SAAC5F,GACvB,IAAM+F,EAAY1I,IAAI2C,EAAO,aAAa,GACpCgG,EAAY3I,IAAI2C,EAAO,aAAa,GACpCiG,EAAgB5I,IAAI2C,EAAO,iBAAiB,GAC5CkG,EAAa7I,IAAI2C,EAAO,gBAAgB,GACxCmG,EAAc9I,IAAI2C,EAAO,cAAe,IACxCoG,EAAe/I,IAAI2C,EAAO,cAAe,IACzCqG,EAAwBhJ,IAAI2C,EAAO,cAAc,eACjDsG,EAAYF,EACf7D,KAAI,SAAC9E,GACJ,IAEM8I,EAFMlJ,IAAII,EAAM,WAAY,GAChBJ,IAAII,EAAM,QAAS,GAE/B+I,EAAW,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAYE,QAAQ,GACxC,OAAOC,OAAOF,MAEfG,QAAO,SAACC,EAAKlK,GACZ,IACMmK,EADeH,OAAOE,GACSlK,EAC/B8J,EAAW,OAAGK,QAAH,IAAGA,OAAH,EAAGA,EAAeJ,QAAQ,GAC3C,OAAOC,OAAOF,MAGlB,OACE,eAACM,GAAA,EAAD,WACGf,GACC,eAACgB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKC,GAAI5J,IAAI8I,EAAa,QAAS,GAAnC,kBACA,cAACa,GAAA,EAAD,CAAKC,GAAI5J,IAAI8I,EAAa,OAAQ,GAAlC,kBACA,cAACa,GAAA,EAAD,CAAK1G,UAAU,cAAc2G,GAAI5J,IAAI8I,EAAa,WAAY,GAA9D,sBAGA,cAACa,GAAA,EAAD,CAAKC,GAAI5J,IAAI8I,EAAa,SAAU,GAApC,wBACA,cAACa,GAAA,EAAD,CAAKC,GAAI5J,IAAI8I,EAAa,SAAU,GAApC,8BAGJ,qBAAK7F,UAAU,YACd8F,EAAa7D,KAAI,SAAC9E,EAAM+E,GACvB,IAAM0E,EAAmB7J,IAAII,EAAM,QAAS,GAAGgJ,QAAQ,GACjDU,GACJ9J,IAAII,EAAM,WAAY,GAAKyJ,GAC3BT,QAAQ,GACV,OACE,eAACM,GAAA,EAAD,CAEEzG,UAAW,oCAFb,UAIG2F,GACC,cAACe,GAAA,EAAD,CACE1G,UAAW,kBACX2G,GAAI5J,IAAI8I,EAAa,QAAS,GAFhC,SAIG3D,EAAQ,IAGZwD,GACC,cAACgB,GAAA,EAAD,CACE1G,UAAW,kBACX2G,GAAI5J,IAAI8I,EAAa,QAAS,GAFhC,SAIE,cAAC,KAAD,CACEiB,YACE,cAAC,GAAD,CAAoB9G,UAAW,yBAEjC+G,SAAU,IACVnD,OAAQ,QACRoD,MAAM,EANR,SAQE,cAACC,EAAA,EAAD,CACEC,IAAKnK,IAAII,EAAM,QAAS,IACxBgK,IAAKpK,IAAII,EAAM,QAAS,UAKhC,cAACuJ,GAAA,EAAD,CAAK1G,UAAW,kBAAmB2G,GAAI5J,IAAI8I,EAAa,OAAQ,GAAhE,SACG9I,IAAII,EAAM,OAAQ,MAErB,cAACuJ,GAAA,EAAD,CACE1G,UAAW,kBACX2G,GAAI5J,IAAI8I,EAAa,WAAY,GAFnC,SAIE,cAAC,GAAD,aACErJ,KAAMW,EACNnB,SAAUe,IAAII,EAAM,WAAY,IAC5BuC,MAGR,cAACgH,GAAA,EAAD,CACE1G,UAAW,kBACX2G,GAAI5J,IAAI8I,EAAa,SAAU,GAFjC,SAIE,eAAC,IAAM3F,SAAP,WACE,sBAAMF,UAAW,OAAjB,SAA0B,MACzB4G,OAGL,cAACF,GAAA,EAAD,CACE1G,UAAW,kBACX2G,GAAI5J,IAAI8I,EAAa,SAAU,GAAK,EAFtC,SAIE,eAAC,IAAM3F,SAAP,WACE,sBAAMF,UAAW,OAAjB,SAA0B,MACzB6G,OAGL,cAACH,GAAA,EAAD,CACE1G,UAAW,kBACX2G,GAAI5J,IAAI8I,EAAa,SAAU,GAAK,EAFtC,SAIE,cAAC,IAAM3F,SAAP,UACE,cAAC6E,EAAA,EAAD,CACEG,QAAS,OACTF,QAAS,kBAAMe,EAAsB5I,IAFvC,0BApEN,oBACoB+E,OA8ExB,qBAAKlC,UAAU,YACf,eAACyG,GAAA,EAAD,CAAKzG,UAAS,oBAAe4F,EAAa,uBAAyB,IAAnE,UACE,cAACc,GAAA,EAAD,CAAKC,GAAIf,EAAa,EAAI,EAA1B,yBACA,cAACc,GAAA,EAAD,CAAK1G,UAAU,mBAAmB2G,GAAI,EAAtC,SACE,eAAC,IAAMzG,SAAP,WACE,sBAAMF,UAAW,OAAjB,SAA0B,MACzBgG,gBClKPoB,I,OAFQrK,IAAIc,EAAY,QAAS,IAEjB,SAAC6B,GACrB,OACE,sBAAKM,UAAU,wCAAf,UACE,cAACiH,EAAA,EAAD,CAAOC,IAAKG,qCACZ,oBAAIrH,UAAU,OAAd,gDAgFSsF,oBAhBf,SAAyB/J,GACvB,MAAO,CACLF,YAAW,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAOF,YACpBiM,UAAS,OAAE/L,QAAF,IAAEA,OAAF,EAAEA,EAAOJ,WAClBoK,YAAW,OAAEhK,QAAF,IAAEA,OAAF,EAAEA,EAAOH,UAIxB,SAA4BoK,GAC1B,MAAO,CACLhB,iBAAkB,SAAChI,GAAD,OAAUgJ,EAAShB,GAAiBhI,KACtDiI,iBAAkB,SAACjI,GAAD,OAAUgJ,EAASf,GAAiBjI,KACtD+H,WAAY,SAAC/H,GAAD,OAAUgJ,EAASjB,GAAW/H,QAI/B8I,EA3EK,SAAC5F,GAAW,IAAD,EACOvB,IAAMC,UAAS,GADtB,mBACtBmJ,EADsB,KACVC,EADU,KAIvBF,EAAYvK,IAAI2C,EAAO,YAAa,GAY1C,OACE,eAAC,IAAMQ,SAAP,WACE,sBAAK8E,QAfc,kBAAMwC,GAAc,IAeTxH,UAAU,2BAAxC,UACE,cAAC,GAAD,CAAUkE,kBAAkB,IAC5B,qBAAKlE,UAAU,aAAf,SAA6BsH,OAE/B,eAACG,EAAA,EAAD,CACEC,SAAS,SACTC,UAAU,EACVzC,QAAS,OACT0C,KAAML,EACNM,OAzBkB,kBAAML,GAAc,IA0BtCM,gBAAiB,sBACjBC,kBAAgB,aAChBC,UAAQ,EARV,UAUE,cAACP,EAAA,EAAMQ,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACT,EAAA,EAAMU,MAAP,6BAEF,cAACV,EAAA,EAAMW,KAAP,CAAYpI,UAAU,YAAtB,SACGsH,EACC,cAAC,GAAD,2BAhCY,CACpB5B,WAAW,EACXG,YAAa,CACX3D,MAAO,EACP/F,MAAO,EACPF,KAAM,EACND,SAAU,EACVqM,OAAQ,EACRC,OAAQ,KAwBsC5I,IAExC,cAAC,GAAD,MAGJ,cAAC+H,EAAA,EAAMc,OAAP,UACE,cAACxD,EAAA,EAAD,CACEtJ,KAAK,SACLyJ,QAAQ,OACRsD,GAAInG,OACJF,GAAE,UAAK3H,EAAL,aACFwK,QAAS,kBAAMwC,GAAc,IAC7BvC,UAAWqC,EANb,iCCzDJxJ,GAAQf,IAAIc,EAAY,QAAS,IAwExByH,oBAPf,SAAyB/J,GACvB,MAAO,CACLF,YAAW,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAOF,YACpBiM,UAAS,OAAE/L,QAAF,IAAEA,OAAF,EAAEA,EAAOJ,cAIPmK,EAvEA,SAAC5F,GAAW,IAAD,EACgBvB,IAAMC,SAAS,GAD/B,mBACjBqK,EADiB,KACHC,EADG,KAExBvK,IAAMK,WAAU,WACd,IAAMmK,EACJhJ,SAASiJ,cAAc,mBAAmBC,aACxCJ,IAAiBE,GACnBD,EAAgBC,MAGpB,IAAMtN,EAAc0B,IAAI2C,EAAO,cAAe,IACxCN,EAAOnB,IAAUmB,KASvB,OACE,wBAAQ0J,MAAO,CAAElF,OAAO,GAAD,OAAK6E,EAAL,OAAvB,SACE,eAACM,EAAA,EAAD,CACEC,MAAM,MACNhJ,UAAU,0BACVkF,QAAQ,OACR+D,OAAO,KAJT,UAME,cAAC,OAAD,CAAM9G,GAAG,aAAT,SACE,cAAC4G,EAAA,EAAOG,MAAR,CAAclJ,UAAU,OAAxB,yBAEF,cAAC+I,EAAA,EAAOI,OAAR,CAAeC,gBAAc,iBAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBrJ,UAAU,wBAAwBjE,GAAG,eAAtD,UACE,cAAC,EAAD,IACCuN,kBAAQjO,GACP,cAAC,OAAD,CAAM8G,GAAG,mBAAT,SACE,cAAC4G,EAAA,EAAOG,MAAR,sBAGF,eAAC,IAAMhJ,SAAP,WACE,mBAAGF,UAAU,eAAe8I,MAAO,CAAES,MAAO,SAA5C,SACGnK,EAAO,aAEV,cAAC2F,EAAA,EAAD,CACE/E,UAAU,OACVkF,QAAQ,gBACRF,QAAS,WACPlH,GAAM0H,SAAS,CAAE/J,KAAM,WACvBgE,EAAgB,CACdK,OAAQ,UACRD,QAAS,qBAPf,uBAeJ,cAAC,GAAD,eCtDG0I,I,OAAS,WACpB,OACE,yBAAQvI,UAAU,uBAAlB,UACE,cAACwG,GAAA,EAAD,UACE,cAACuC,EAAA,EAAD,CAAQ/I,UAAU,WAAWkF,QAAQ,OAArC,SACE,cAACpD,EAAA,EAAD,CAAK9B,UAAU,QAAf,SACE,eAACyG,GAAA,EAAD,CAAKzG,UAAU,2BAAf,UACE,cAAC0G,GAAA,EAAD,UACE,cAAC5E,EAAA,EAAIO,KAAL,UAAWpE,IAAUc,KAAO,IAAMd,IAAUoB,SAE9C,eAACqH,GAAA,EAAD,WACE,qBAAI1G,UAAU,6BAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,cAAC,gBAAD,CAAemC,GAAG,IAAlB,SACE,cAACL,EAAA,EAAIO,KAAL,UACE,mBAAGrC,UAAU,yBAInB,oBAAIA,UAAU,mBAAd,SACE,cAAC,gBAAD,CAAemC,GAAG,IAAlB,SACE,eAACL,EAAA,EAAIO,KAAL,WACE,mBAAGrC,UAAU,sBAAyB,WAI5C,oBAAIA,UAAU,mBAAd,SACE,cAAC,gBAAD,CAAemC,GAAG,IAAlB,SACE,eAACL,EAAA,EAAIO,KAAL,WACE,mBAAGrC,UAAU,uBAA0B,cAIzC,gBAMhB,cAAC,IAAD,S,uCCbSwJ,I,OAlCK,SAAC9J,GAAW,IAAD,EAOzB3C,IAAI2C,EAAO,OAAQ,IALrB3D,EAF2B,EAE3BA,GAF2B,IAG3BI,MAAOsN,OAHoB,MAGT,GAHS,MAI3BvN,aAJ2B,MAInB,GAJmB,MAK3BwN,mBAL2B,MAKb,GALa,MAM3BtN,aAN2B,MAMnB,GANmB,EAQ7B,OACE,cAACuN,GAAA,EAAD,CAAM3J,UAAU,cAAhB,SACE,eAAC,OAAD,CAAMmC,GAAE,UAAK3H,EAAL,oBAA2BuB,GAAnC,UACE,cAAC4N,GAAA,EAAK1B,OAAN,UACE,cAAC,KAAD,CACEnB,YACE,cAAC,GAAD,CAAoB9G,UAAW,yBAEjC+G,SAAU,IACVnD,OAAQ,QALV,SAOE,cAACqD,EAAA,EAAD,CAAOC,IAAKuC,EAAUtC,IAAKjL,QAG/B,eAACyN,GAAA,EAAKvB,KAAN,WACE,cAACuB,GAAA,EAAKxB,MAAN,UAAajM,IACb,cAACyN,GAAA,EAAKC,SAAN,CAAe5J,UAAU,kBAAzB,SACE,mBAAGA,UAAU,eAAb,SAA6B0J,SAGjC,cAACC,GAAA,EAAKpB,OAAN,CAAavI,UAAU,aAAvB,0BAA+C5D,YCyCxCyN,I,OAnEH,SAACnK,GACX,IAAMuB,EAAUC,qBAAWP,GADN,EAE2BxC,IAAMC,SAAS,IAF1C,mBAEd0L,EAFc,KAEIC,EAFJ,KAGfC,EAAiBjN,IAAIkE,EAAS,aAAc,IAH7B,EAI2BI,YAAS5G,GAA5C6G,EAJQ,EAIbvE,IAAkBwE,EAJL,EAIKA,SAAU0I,EAJf,EAIeA,QAC9BC,EAA0BnN,IAAIiN,EAAgB,eAAgB,IAC9DG,EAAaC,mBACjBrN,IAAI2C,EAAO,4BAA6B,KAG1CvB,IAAMK,WAAU,WACd6L,MACC,CAACF,IAEJ,IAAME,EAAmB,uCAAG,4BAAA5I,EAAA,sEACKH,EAAY,sBAAD,OAClB6I,IAFE,OACpBL,EADoB,OAItBvI,EAASI,IACXoI,EAAoBD,GALI,2CAAH,qDASzB,OACE,qBAAK9J,UAAU,gBAAf,SACGiK,EACC,cAAC,EAAD,CAAgBjK,UAAU,sDAE1B,eAACyG,GAAA,EAAD,CAAKzG,UAAU,cAAf,UACE,cAAC0G,GAAA,EAAD,UACE,eAAC4D,GAAA,EAAD,CAAWC,iBAAiB,IAAIzB,MAAO,CAAES,MAAO,SAAhD,UACE,cAACe,GAAA,EAAUnB,OAAX,CAAkBX,GAAImB,KAAK1B,OAAQuC,SAAS,IAA5C,sBAGA,cAACF,GAAA,EAAUjB,SAAX,CAAoBmB,SAAS,IAA7B,SACE,cAACb,GAAA,EAAKvB,KAAN,CAAWpI,UAAU,gBAArB,gBACGkK,QADH,IACGA,OADH,EACGA,EAAyBjI,KAAI,SAACwI,EAAcvI,GAC3C,OACE,cAAC,OAAD,CACElC,UAAS,yBACPmK,IAAeM,EAAe,OAAS,IAGzCtI,GAAE,UAAK3H,EAAL,qBAA4B4H,mBAC5BqI,IANJ,SASGA,GALIA,EAAevI,eAalC,cAACwE,GAAA,EAAD,CAAKoC,MAAO,CAAE4B,SAAU,GAAxB,SACE,cAACC,GAAA,EAAD,CAAU3K,UAAU,cAApB,SACG8J,EAAiB7H,KAAI,SAAC9E,GACrB,OAAO,cAAC,GAAD,CAAaA,KAAMA,kB,mICxC3B,SAASyN,GAAgBlL,GAAQ,IAAD,EACPvB,IAAMC,UAAS,GADR,mBACtCyM,EADsC,KACzBC,EADyB,KAEvCC,EAAchO,IAAI2C,EAAO,cAAe,IACxCsL,EAAYjO,IAAI2C,EAAO,YAAa,IACpCuL,EAAWlO,IAAI2C,EAAO,WAAY,IAClCwL,EAASnO,IAAI2C,EAAO,QAAQ,GAC5ByL,EAASpO,IAAI2C,EAAO,QAAQ,GAC5B0L,EAAarO,IAAI2C,EAAO,aAAc,GAE5C,OACE,cAAC,IAAMQ,SAAP,UACE,cAAC,KAAD,yBACEmL,WAAY,CACVC,WAAW,GAEbtL,UAAU,WACV8I,MAAO,CACL,4BAA6B,OAC7B,4BAA6B,QAE/ByC,SAAUxO,IAAI2C,EAAO,WAAY,IACjC8L,WAAYzO,IAAI2C,EAAO,cAAc,GACrC+L,KAAMP,EACNQ,KAAMP,EACNQ,YAAY,EACZC,OAAQ7O,IAAI2C,EAAO,SAAU,KACzBqL,GAfN,oBAiBGE,QAjBH,IAiBGA,OAjBH,EAiBGA,EAAUhJ,KAAI,SAAC9E,EAAM+E,GACpB,IAAM2J,EAAY9O,IAAII,EAAM,SAAU,IACtC,OAAI0O,EAEA,cAAC,KAAD,UACE,cAAC,OAAD,CAAM1J,GAAIpF,IAAII,EAAM,OAAQ,IAA5B,SACE,cAAC,KAAD,yBACE2J,YACE,cAAC,GAAD,CACE9G,UAAW,8BAGXgL,GANN,aAQE,cAAC/D,EAAA,EAAD,CACEjH,UAAS,uBACP6K,EAAc,gBAAkB,gBAElC3D,IAAK2E,EACLC,OAAQ,WACNC,YAAW,WACTjB,GAAe,KACdM,YAlBb,UAAqBrO,IAAII,EAAM,MAAO,IAAtC,YAA6C+E,IA0BxC,cAAC,IAAMhC,SAAP,YA5DnB8L,KAAWC,IAAI,CAACC,KAAUC,KAAYC,KAAiBC,KAAYC,O,WCyCpDC,GAxDS,SAAC7M,GAAW,IAAD,EAC6BvB,IAAMC,SAClE,IAF+B,mBAC1BoO,EAD0B,KACDC,EADC,OAIepL,YAAS5G,GAA5C6G,EAJoB,EAIzBvE,IAAkBwE,EAJO,EAIPA,SAJO,EAIG0I,QAEpC9L,IAAMK,WAAU,WACdkO,MACC,IAEH,IAAMA,EAA0B,uCAAG,4BAAAjL,EAAA,sEACFH,EAAY,sBADV,OAC3BqL,EAD2B,OAE7BpL,EAASI,IACX8K,EAA2BE,GAHI,2CAAH,qDAkB1BC,EAAiBJ,EAAwBK,OAC3CL,EAAwBvK,KAAI,SAAC9E,GAC3B,MAAO,CACLgK,IAAKhK,EAAKjB,MACV4Q,OAAQ3P,EAAKhB,MACb4Q,KAAK,GAAD,OAAKvS,EAAL,oBAA2B2C,EAAKpB,QAGxC,GACJ,OACE,eAAC0K,GAAA,EAAD,CAAKzG,UAAU,+BAAf,UACE,oBAAIA,UAAU,oBAAd,mCACA,cAAC4K,GAAD,CACEG,YAAa,CACXiC,gBA1BsB,CAC5BC,YAAY,EACZC,gBAAgB,EAChBC,cAAe,OACfH,gBAAiB,CACfI,OAAQ,GACRC,QAAS,EACTC,MAAO,IACPC,SAAU,EACVC,cAAc,IAkBV5B,OAAQ,YACRqB,YAAY,EACZC,gBAAgB,EAChBC,cAAe,OACf9B,YAAY,GAEdJ,SAAU2B,EACVlB,MAAM,EACNV,UAAW,CAAEjE,SAAU,WCxDzB0G,I,OAAa,CACjB,CACEX,OACE,4EACFC,KAAK,GAAD,OAAKvS,EAAL,yBACJ2M,IAAK,uBAEP,CACE2F,OACE,8FACFC,KAAK,GAAD,OAAKvS,EAAL,sBACJ2M,IAAK,qBAEP,CACE2F,OACE,uFACFC,KAAK,GAAD,OAAKvS,EAAL,8BACJ2M,IAAK,sBAiCMuG,GA7BE,SAAChO,GAChBlB,qBAAU,WACRmB,SAASzD,MAAQ,kBAMnB,OACE,sBAAK8D,UAAU,oBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC4K,GAAD,CACE+C,SAAU,CACRC,MAAO,KACPC,sBAAsB,GAExBpC,MAAM,EACNC,MAAM,EACNN,WAAY,IACZJ,UAfc,CACpBhE,MAAM,EACND,SAAU,KAcJkE,SAAUwC,OAGd,8BACE,cAAC,GAAD,U,sCClCF3P,I,OAAQf,IAAIc,EAAY,QAAS,KAEjCiQ,GAAcC,OAAaC,MAAM,CACrCC,SAAUF,OACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUN,OACPK,SAAS,yBACTF,IAAI,EAAG,wDAGL,SAASI,GAAU5O,GAAQ,IAAD,EACY2B,YAAS5G,GAA5C8T,EADuB,EACvBA,KAAMhN,EADiB,EACjBA,SAAU0I,EADO,EACPA,QADO,EACEuE,MAEjChQ,qBAAU,WACRmB,SAASzD,MAAQ,uBAChB,IAEH,IAAMuS,EAAY,uCAAG,WAAOC,GAAP,eAAAjN,EAAA,sEACQ8M,EAAK,aAAcG,GAD3B,OACbC,EADa,OAGjB5R,IAAIwE,EAAU,MAAM,IAC8B,UAAlDxE,IAAI4R,EAAc,SAAU,IAAIC,eAEhC9Q,GAAM0H,SAAS,CACb/J,KAAM,YACNE,QAAS,CACPsS,SAAUlR,IAAI2R,EAAU,WAAY,IACpCG,MAAO9R,IAAI4R,EAAc,QAAS,OAGtClP,EAAgB,CACdK,OAAQ,UACRD,QAAS,uBAEXH,EAAMoP,QAAQzS,KAAK7B,IAEnBiF,EAAgB,CACdK,OAAQ,OACRD,QAAS,oBArBM,2CAAH,sDA0BlB,OACE,eAAC2G,GAAA,EAAD,CAAWxG,UAAU,kBAArB,UACE,cAACyG,GAAA,EAAD,UACE,oBAAIzG,UAAU,mBAAd,uBAEF,cAACyG,GAAA,EAAD,CAAKzG,UAAU,yBAAf,SACE,cAAC0G,GAAA,EAAD,CAAKqI,GAAG,IAAR,SACE,cAAC,KAAD,CACEC,cAAe,CAAEf,SAAU,QAASI,SAAU,WAC9CY,iBAAkBnB,GAClBoB,SAAUT,EAHZ,SAKG,gBAAGU,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAZ,OACC,eAAC,KAAD,WACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,QAAQ,WAAnB,uBACA,cAAC,KAAD,CACE9T,KAAK,OACLQ,KAAK,WACL6K,YAAY,kBACZ9G,UAAS,uBACPmP,EAAQK,OAASJ,EAAOI,MAAQ,aAAe,MAGnD,cAAC,KAAD,CACEC,UAAU,MACVxT,KAAK,WACL+D,UAAU,wBAGd,eAACqP,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,QAAQ,WAAnB,sBACA,cAAC,KAAD,CACE9T,KAAK,WACLQ,KAAK,WACL6K,YAAY,iBACZ9G,UAAS,uBACPmP,EAAQd,UAAYe,EAAOf,SAAW,aAAe,MAGzD,cAAC,KAAD,CACEoB,UAAU,MACVxT,KAAK,WACL+D,UAAU,wBAGd,cAAC+E,EAAA,EAAD,CAAQG,QAAQ,eAAezJ,KAAK,SAASuE,UAAU,QAAvD,SACGiK,EAAU,aAAe,wBAW7BqE,ICxHAoB,GCAC,SAAChQ,GAEf,OADAiQ,QAAQC,IAAI,SAAUlQ,GACf,uC,UCOImQ,I,cAAkB,SAACnQ,GAC9B,IAAMoQ,EAAkB/S,IAAI2C,EAAO,kBAAmB,IAChDqQ,EAAa,uEAAmE3N,mBACpF,8BAKKrF,IAAI+S,EAAiB,QAASC,GAIrC,OACE,cAAC,IAAM7P,SAAP,UACE,qBAAKF,UAAU,oBAAf,SACGjD,IAAI+S,EAAiB,QAAS,KAC7B,cAAC,KAAD,CACEhJ,YACE,cAAC,GAAD,CAAoB9G,UAAW,yBAEjC+G,SAAU,IACVnD,OAAQ,QACRoD,MAAM,EANR,SAQE,cAACC,EAAA,EAAD,CACEC,IAAKnK,IAAI+S,EAAiB,QAAS,IACnC3I,IAAKpK,IAAI+S,EAAiB,QAAS,c,cC3BnC/S,IAAIc,EAAY,QAAS,IA6DxByH,oBAXf,SAAyB/J,GACvB,MAAO,CACLF,YAAW,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAOF,gBAIxB,SAA4BmK,GAC1B,MAAO,CACLwK,QAAS,SAACxT,GAAD,OAAUgJ,EdlDd,CACL/J,KAAMC,EACNC,QcgDoCa,QAGzB8I,EA3DU,SAAC5F,GACxB,IAAMoQ,EAAkB/S,IAAI2C,EAAO,kBAAmB,IAChDuK,EAAUlN,IAAI2C,EAAO,WAAW,GA2BtC,OACE,sBAAKM,UAAU,YAAf,UACE,qBAAKA,UAAU,YAAf,SAA4BjD,IAAI+S,EAAiB,QAAS,MAC1D,qBAAK9P,UAAU,YAAf,SAhBgB,WAClB,IAAMiQ,EAAYlT,IAAI+S,EAAiB,QAAS,GAC1CI,GAAiBD,EAAY,GAAMA,GAAW9J,QAAQ,GAC5D,OACE,sBAAKnG,UAAU,oBAAf,UACE,qBAAKA,UAAU,iBAAf,SAAiC,IAAMiQ,IACvC,qBAAKjQ,UAAU,mCAAf,SACG,IAAMkQ,OASiBC,KAC5B,qBAAKnQ,UAAU,WAAf,SAA2BjD,IAAI+S,EAAiB,cAAe,OAC7D7F,GACA,yBACEjF,QAAS,kBAhCY,WAAgB,IAAfxI,EAAc,uDAAP,GAC7B4T,EAAezQ,SAASiJ,cAAc,uBACxCwH,IACFA,EAAaC,UAAUC,IAAI,SAC3BvE,YAAW,WACTqE,EAAaC,UAAUE,OAAO,WAC7B,MAEaxT,IAAI2C,EAAO,WAAW,cACxC8Q,CAAUzT,IAAIP,EAAM,kBAAmB,KAuBlBiU,CAAqB,CAAEX,qBACtC9P,UAAU,qBAFZ,UAIE,cAAC,GAAD,IACA,sBAAMA,UAAU,cAAhB,yBACA,sBAAMA,UAAU,gBAAhB,oCCsBK0Q,GA/DC,SAAChR,GAAW,IAAD,EACuB2B,YAAS5G,GAA5C6G,EADY,EACjBvE,IAAkBwE,EADD,EACCA,SAAU0I,EADX,EACWA,QADX,EAEqB9L,IAAMC,SAAS,IAFpC,mBAElB0R,EAFkB,KAEDa,EAFC,KAGnBC,EAAYxG,mBAChBrN,IAAI2C,EAAO,yBAA0B,KAGvCvB,IAAMK,WAAU,WACdqS,MACC,CAACD,IAEJ,IAAMC,EAAkB,uCAAG,4BAAApP,EAAA,sEACKH,EAAY,aAAD,OAAcsP,IAD9B,OACnBd,EADmB,OAErBvO,EAASI,IACXgP,EAAmBb,GAHI,2CAAH,qDAOlBgB,EAAW,aACfhB,mBACGpQ,GAsBL,OAFAiQ,QAAQC,IAAI,WAAY3F,GAGtB,cAACzD,GAAA,EAAD,CAAWxG,UAAU,qBAArB,SACGiK,EACC,cAAC,EAAD,CAAgBjK,UAAU,sDAE1B,eAAC,IAAME,SAAP,WACE,cAACuG,GAAA,EAAD,UA1BiB,WACvB,IAAMgE,EAAe1N,IAAI+S,EAAiB,WAAY,IACtD,OACE,eAACiB,GAAA,EAAD,WACE,cAAC,gBAAD,CAAe5O,GAAE,UAAK3H,GAAtB,SACE,cAACuW,GAAA,EAAWC,KAAZ,qBAEF,cAAC,gBAAD,CACE7O,GAAE,UAAK3H,EAAL,qBAA4B4H,mBAAmBqI,IADnD,SAGE,cAACsG,GAAA,EAAWC,KAAZ,UAAkBvG,MAEpB,cAACsG,GAAA,EAAWC,KAAZ,CAAiBC,QAAM,EAAvB,SACGlU,IAAI+S,EAAiB,QAAS,SAazBoB,KACN,eAACzK,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKqI,GAAI,EAAGpI,GAAI,EAAGwK,GAAI,GAAInR,UAAU,WAArC,SACG6P,GAAgBiB,KAEnB,cAACpK,GAAA,EAAD,CAAKqI,GAAI,EAAGpI,GAAI,EAAGwK,GAAI,GAAInR,UAAU,YAArC,SACE,cAAC,GAAD,eAAsB8Q,e,UCvD9BM,GAASrD,OAAaC,MAAM,CAChCqD,UAAWtD,OACRG,IAAI,EAAG,0CACPC,IAAI,IAAK,8CACTC,SAAS,qBACZkD,SAAUvD,OAAaK,WACvBmD,QAASxD,OAAaK,WACtBoD,SAAUzD,OACV0D,KAAM1D,OAAaK,WACnB7S,MAAOwS,OAAaK,WACpBsD,IAAK3D,OAAaK,WAClBuD,MAAO5D,OAAWK,WAAWwD,MAAM,EAAC,GAAO,4BCpB9BC,GDuBK,WAAiB,IAAhBnS,EAAe,uDAAP,GAAO,EACLA,EAArBoS,mBAD0B,MACZ,GADY,EAG5B5C,EAAQ,uCAAG,WAAOrL,EAAQkO,GAAf,mBAAAtQ,EAAA,sDACPuQ,EAA6BD,EAA7BC,cAA6BD,EAAdE,UADR,EAEwBvS,EAA/BwS,uBAFO,MAEW,aAFX,EAGfF,GAAc,GACdE,EAAgBrO,GAKhBmO,GAAc,GATC,2CAAH,wDAYd,OADArC,QAAQC,IAAI,eAAgBkC,GAE1B,qBAAK9R,UAAW,kDAAhB,SACE,cAAC,KAAD,CACEiP,iBAAkBmC,GAClBlC,SAAUA,EACVF,cAAe,CACbqC,UAAWtU,IAAI+U,EAAa,YAAa,IACzCR,SAAUvU,IAAI+U,EAAa,WAAY,IACvCP,QAASxU,IAAI+U,EAAa,UAAW,IACrCN,SAAUzU,IAAI+U,EAAa,WAAY,IACvCL,KAAM1U,IAAI+U,EAAa,OAAQ,IAC/BvW,MAAOwB,IAAI+U,EAAa,QAAS,IACjCJ,IAAK3U,IAAI+U,EAAa,MAAO,IAC7BtC,MAAOzS,IAAI+U,EAAa,QAAS,IACjCH,MAAO5U,IAAI+U,EAAa,SAAS,IAZrC,SAeG,WAAuB,IAAtBC,EAAqB,uDAAP,GAEZI,EAQEJ,EARFI,aACAC,EAOEL,EAPFK,aACAC,EAMEN,EANFM,WACAxO,EAKEkO,EALFlO,OACAsL,EAIE4C,EAJF5C,QAEAC,GAEE2C,EAHFO,QAGEP,EAFF3C,QACAmD,EACER,EADFQ,aAGF,OADA5C,QAAQC,IAAI,UAAW/L,GAErB,eAAC2O,GAAA,EAAD,CAAM1J,MAAO,CAAE2J,SAAU,OAASvD,SAAUiD,EAA5C,UACE,eAAC1L,GAAA,EAAD,CAAKzG,UAAU,OAAf,UACE,eAACwS,GAAA,EAAKE,MAAN,CAAY/L,GAAG,IAAI6B,GAAI9B,KAAKiM,UAAU,qBAAtC,UACE,cAACH,GAAA,EAAKI,MAAN,yBACA,cAACJ,GAAA,EAAKK,QAAN,CACEpX,KAAK,OACLQ,KAAK,YACL6K,YAAY,OACZ1B,MAAOvB,EAAOwN,UACdyB,SAAUV,EACVW,OAAQV,EACRW,YAAa5D,EAAOmC,QACpBe,QAASnD,EAAQkC,YAAcjC,EAAOiC,YAExC,cAACmB,GAAA,EAAKK,QAAQI,SAAd,CACExX,KAAO2T,EAAOiC,UAAsB,UAAV,QAD5B,SAGIjC,EAAOiC,UAA4BjC,EAAOiC,UAAvB,mBAGzB,eAACmB,GAAA,EAAKE,MAAN,CAAYlK,GAAI9B,KAAKC,GAAG,IAAIgM,UAAU,qBAAtC,UACE,cAACH,GAAA,EAAKI,MAAN,wBACA,cAACJ,GAAA,EAAKK,QAAN,CACEpX,KAAK,OACLQ,KAAK,WACL6K,YAAY,MACZ1B,MAAOvB,EAAOyN,SACdwB,SAAUV,EACVW,OAAQV,EACRW,YAAa5D,EAAOkC,SACpBgB,QAASnD,EAAQmC,WAAalC,EAAOkC,WAEvC,cAACkB,GAAA,EAAKK,QAAQI,SAAd,CACExX,KAAO2T,EAAOkC,SAAqB,UAAV,QAD3B,SAGIlC,EAAOkC,SAAoBlC,EAAOkC,SAAhB,YAGxB,eAACkB,GAAA,EAAKE,MAAN,CAAYlK,GAAI9B,KAAKC,GAAG,IAAIgM,UAAU,0BAAtC,UACE,cAACH,GAAA,EAAKI,MAAN,sBACA,cAACJ,GAAA,EAAKK,QAAN,CACEpX,KAAK,OACLqL,YAAY,eACZoM,mBAAiB,oBACjBjX,KAAK,UACLmJ,MAAOvB,EAAO0N,QACduB,SAAUV,EACVY,YAAa5D,EAAOmC,UAEtB,cAACiB,GAAA,EAAKK,QAAQI,SAAd,CAAuBxX,KAAK,UAA5B,SACG2T,EAAOmC,aAGZ,eAACiB,GAAA,EAAKE,MAAN,CAAYlK,GAAI9B,KAAKC,GAAG,IAAxB,UACE,cAAC6L,GAAA,EAAKI,MAAN,wBACA,cAACJ,GAAA,EAAKK,QAAN,CACEpX,KAAK,OACLqL,YAAY,8BACZoM,mBAAiB,oBACjBjX,KAAK,WACLmJ,MAAOvB,EAAO2N,SACdsB,SAAUV,EACVY,YAAa5D,EAAOoC,cAGxB,eAACgB,GAAA,EAAKE,MAAN,CAAYlK,GAAI9B,KAAKC,GAAG,IAAIgM,UAAU,qBAAtC,UACE,cAACH,GAAA,EAAKI,MAAN,mBACA,cAACJ,GAAA,EAAKK,QAAN,CACEpX,KAAK,OACLqL,YAAY,OACZ7K,KAAK,OACLmJ,MAAOvB,EAAO4N,KACdqB,SAAUV,EACVY,YAAa5D,EAAOqC,OAGtB,cAACe,GAAA,EAAKK,QAAQI,SAAd,CAAuBxX,KAAK,UAA5B,SACG2T,EAAOqC,UAGZ,eAACe,GAAA,EAAKE,MAAN,CAAYlK,GAAI9B,KAAKC,GAAG,IAAIgM,UAAU,qBAAtC,UACE,cAACH,GAAA,EAAKI,MAAN,oBACA,cAACJ,GAAA,EAAKK,QAAN,CACEpX,KAAK,OACLqL,YAAY,QACZ7K,KAAK,QACLmJ,MAAOvB,EAAOtI,MACduX,SAAUV,EACVY,YAAa5D,EAAO7T,QAEtB,cAACiX,GAAA,EAAKK,QAAQI,SAAd,CAAuBxX,KAAK,UAA5B,SACG2T,EAAO7T,WAGZ,eAACiX,GAAA,EAAKE,MAAN,CAAYlK,GAAI9B,KAAKC,GAAG,IAAIgM,UAAU,qBAAtC,UACE,cAACH,GAAA,EAAKI,MAAN,kBACA,cAACJ,GAAA,EAAKK,QAAN,CACEpX,KAAK,OACLqL,YAAY,MACZ7K,KAAK,MACLmJ,MAAOvB,EAAO6N,IACdoB,SAAUV,EACVY,YAAa5D,EAAOsC,MAEtB,cAACc,GAAA,EAAKK,QAAQI,SAAd,CAAuBxX,KAAK,UAA5B,SACG2T,EAAOsC,YAKd,eAACjL,GAAA,EAAD,CAAKzG,UAAU,+BAAf,UACE,cAACwS,GAAA,EAAKE,MAAN,CAAYlK,GAAI9B,KAAKC,GAAG,IAAxB,SACE,cAAC6L,GAAA,EAAKW,MAAN,CACElX,KAAK,QACLmX,MAAM,gCACNC,QAASxP,EAAO8N,MAChBmB,SAAUV,EACVY,YAAa5D,EAAOuC,MACpB2B,SAAUlE,EAAOuC,MACjB5V,GAAG,wBAGP,cAACyW,GAAA,EAAKE,MAAN,CAAYlK,GAAI9B,KAAKC,GAAG,IAAI3G,UAAU,WAAtC,SACE,cAAC+E,EAAA,EAAD,CAAQE,SAAUsN,EAAcrN,QAAQ,OAAOzJ,KAAK,SAApD,6C,mBElLZ8X,GAAe,CACnBC,UAAW,QACX1K,MAAO,CACL2K,KAAM,CACJC,UAAW,UACXnK,MAAO,OACPoK,WAAY,IACZC,WAAY,0CACZC,SAAU,OACVC,cAAe,cACf,oBAAqB,CACnBvK,MAAO,WAET,gBAAiB,CACfA,MAAO,YAGXwK,QAAS,CACPL,UAAW,UACXnK,MAAO,aAKPyK,GAAY,SAAC,GAAD,IAAGlB,EAAH,EAAGA,SAAH,OAChB,qBAAK9S,UAAU,UAAf,SACE,cAAC,eAAD,CAAaiU,QAASV,GAAcT,SAAUA,OAI5CoB,GAAQ,SAAC,GAAD,IACZd,EADY,EACZA,MACArX,EAFY,EAEZA,GACAN,EAHY,EAGZA,KACAqL,EAJY,EAIZA,YACAsH,EALY,EAKZA,SACA+F,EANY,EAMZA,aACA/O,EAPY,EAOZA,MACA0N,EARY,EAQZA,SARY,OAUZ,sBAAK9S,UAAU,UAAf,UACE,uBAAOuP,QAASxT,EAAIiE,UAAU,eAA9B,SACGoT,IAEH,uBACEpT,UAAU,eACVjE,GAAIA,EACJN,KAAMA,EACNqL,YAAaA,EACbsH,SAAUA,EACV+F,aAAcA,EACd/O,MAAOA,EACP0N,SAAUA,QAKVsB,GAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAY7F,EAAf,EAAeA,MAAOvD,EAAtB,EAAsBA,SAAUhG,EAAhC,EAAgCA,SAAhC,OACnB,wBACEjF,UAAS,uBAAkBwO,EAAQ,sBAAwB,IAC3D/S,KAAK,SACLwJ,SAAUoP,GAAcpP,EAH1B,SAKGoP,EAAa,gBAAkBpJ,KAI9BqJ,GAAe,SAAC,GAAD,IAAGrJ,EAAH,EAAGA,SAAH,OACnB,sBAAKjL,UAAU,eAAeuU,KAAK,QAAnC,UACE,sBAAK5Q,MAAM,KAAKC,OAAO,KAAKjB,QAAQ,YAApC,UACE,sBACEG,KAAK,OACLwB,EAAE,wJAEJ,sBACExB,KAAK,UACLwB,EAAE,6tBAGL2G,MAICuJ,GAAc,SAAC,GAAD,IAAGxP,EAAH,EAAGA,QAAH,OAClB,wBAAQvJ,KAAK,SAASuE,UAAU,cAAcgF,QAASA,EAAvD,SACE,qBAAKrB,MAAM,OAAOC,OAAO,OAAOjB,QAAQ,YAAxC,SACE,sBACEG,KAAK,OACLwB,EAAE,0iCAMJmQ,GAAe,WACnB,IAAMC,EAASC,uBACTC,EAAWC,yBAFQ,EAGCzW,mBAAS,MAHV,mBAGlBoQ,EAHkB,KAGXsG,EAHW,OAIe1W,oBAAS,GAJxB,mBAIlB2W,EAJkB,KAIJC,EAJI,OAKW5W,oBAAS,GALpB,mBAKlBiW,EALkB,KAKNY,EALM,OAMiB7W,mBAAS,MAN1B,mBAMlB8W,EANkB,KAMHC,EANG,OAOmB/W,mBAAS,CACnDoR,MAAO,GACP4F,MAAO,GACPnZ,KAAM,KAViB,mBAOlBoZ,EAPkB,KAOFC,EAPE,KAanBnD,EAAY,uCAAG,WAAOoD,GAAP,eAAA9T,EAAA,yDACnB8T,EAAMC,iBAEDd,GAAWE,EAHG,qDASfpG,EATe,uBAUjBoG,EAASa,WAAW,QAAQC,QAVX,iCAcfX,GACFE,GAAc,GAfG,SAkBGP,EAAOiB,oBAAoB,CAC/Cla,KAAM,OACNma,KAAMhB,EAASa,WAAWI,gBAC1BC,gBAAiBT,IArBA,OAkBb1Z,EAlBa,OAwBnBsZ,GAAc,GAEVtZ,EAAQ6S,MACVsG,EAASnZ,EAAQ6S,OAEjB2G,EAAiBxZ,EAAQuZ,eA7BR,4CAAH,sDA4ClB,OAAOA,EACL,sBAAKlV,UAAU,SAAf,UACE,qBAAKA,UAAU,cAAcuU,KAAK,QAAlC,gCAGA,sBAAKvU,UAAU,gBAAf,wGAE8BkV,EAAcnZ,MAE5C,cAAC,GAAD,CAAaiJ,QApBH,WACZ8P,EAAS,MACTG,GAAc,GACdE,EAAiB,MACjBG,EAAkB,CAChB9F,MAAO,GACP4F,MAAO,GACPnZ,KAAM,WAgBR,uBAAM+D,UAAU,OAAOkP,SAAUiD,EAAjC,UACE,2BAAUnS,UAAU,YAApB,UACE,cAAC,GAAD,CACEoT,MAAM,OACNrX,GAAG,OACHN,KAAK,OACLqL,YAAY,WACZsH,UAAQ,EACR+F,aAAa,OACb/O,MAAOiQ,EAAepZ,KACtB6W,SAAU,SAACiD,GACTT,EAAkB,2BAAKD,GAAN,IAAsBpZ,KAAM8Z,EAAEC,OAAO5Q,YAG1D,cAAC,GAAD,CACEgO,MAAM,QACNrX,GAAG,QACHN,KAAK,QACLqL,YAAY,oBACZsH,UAAQ,EACR+F,aAAa,QACb/O,MAAOiQ,EAAe7F,MACtBsD,SAAU,SAACiD,GACTT,EAAkB,2BAAKD,GAAN,IAAsB7F,MAAOuG,EAAEC,OAAO5Q,YAG3D,cAAC,GAAD,CACEgO,MAAM,QACNrX,GAAG,QACHN,KAAK,MACLqL,YAAY,iBACZsH,UAAQ,EACR+F,aAAa,MACb/O,MAAOiQ,EAAeD,MACtBtC,SAAU,SAACiD,GACTT,EAAkB,2BAAKD,GAAN,IAAsBD,MAAOW,EAAEC,OAAO5Q,eAI7D,0BAAUpF,UAAU,YAApB,SACE,cAAC,GAAD,CACE8S,SAAU,SAACiD,GACTjB,EAASiB,EAAEvH,OACXwG,EAAgBe,EAAEE,eAIvBzH,GAAS,cAAC,GAAD,UAAeA,EAAM3O,UAC/B,cAAC,GAAD,CAAcwU,WAAYA,EAAY7F,MAAOA,EAAOvJ,UAAWyP,EAA/D,yBAOAwB,GAAmB,CACvBC,MAAO,CACL,CACEC,OAAQ,oDAORC,GAAgBC,aAAW,oCAYlBC,GAVQ,WACrB,OACE,qBAAKvW,UAAU,kBAAf,SACE,cAAC,YAAD,CAAU0U,OAAQ2B,GAAepC,QAASiC,GAA1C,SACE,cAAC,GAAD,S,oBCtKOM,I,OAlEE,WAAiB,IAAhB9W,EAAe,uDAAP,GAAO,EACOvB,IAAMC,SAAS,GADtB,mBACxBqY,EADwB,KACXC,EADW,OAEOvY,IAAMC,SAAS,IAFtB,mBAExBuY,EAFwB,KAEXC,EAFW,KAGzBC,EAAkB,CACtBpR,WAAW,EACXE,eAAe,EACfD,WAAW,EACXoR,cAAc,GAEV5E,EAAkB,WAAgB,IAAf/U,EAAc,uDAAP,GAC9ByZ,EAAezZ,GACfuZ,EAAe,IAGXK,EAAwB,SAAC7U,GAC7B,OAAQA,GACN,KAAK,EACH,OACE,sBAAKlC,UAAU,eAAf,UACE,oBAAIA,UAAU,OAAd,+BACA,cAAC,GAAD,2BAAqB6W,GAAqBnX,IAC1C,gCACE,cAACqF,EAAA,EAAD,CAAQC,QAAS,kBAAM0R,EAAe,IAAtC,qBACA,cAAC3R,EAAA,EAAD,CAAQC,QAAS,kBAAM0R,EAAe,IAAtC,uCAMR,KAAK,EACH,OAAO,cAAC,GAAD,IAET,QACE,OACE,qBAAK1W,UAAW,2BAAhB,SACE,cAAC,GAAD,aACE8R,YAAa6E,EACbzE,gBAAiBA,GACbxS,QAOhB,OACE,qBAAKM,UAAW,mBAAhB,SACE,cAACgX,GAAA,EAAD,CACEC,eAAe,UACfC,KAAK,SACLC,uBAAwB,IACxBC,uBAAwB,IAJ1B,SAME,cAACC,GAAA,EAAD,CAEEC,eAAgB,SAACC,EAAMC,GACrBD,EAAKE,iBAAiB,gBAAiBD,GAAM,IAE/CE,WAAW,UALb,SAOGX,EAAsBN,IANlBA,SCXAkB,GA7BA,WAAiB,IAAhBjY,EAAe,uDAAP,GAKtB,OAJAiQ,QAAQC,IAAI,SAAUlQ,GAapB,aARA,CAQA,OAAKM,UAAU,gBAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO4X,OAAK,EAACC,KAAK,aAAapI,UAAW/B,KAC1C,cAAC,KAAD,CAAOkK,OAAK,EAACC,KAAK,gCAAgCpI,UAAWiB,KAC7D,cAAC,KAAD,CAAOkH,OAAK,EAACC,KAAK,oCAAoCpI,UAAW5F,KACjE,cAAC,KAAD,CAAO+N,OAAK,EAACC,KAAK,mBAAmBpI,UAAWnB,KAChD,cAAC,KAAD,CAAOsJ,OAAK,EAACC,KAAK,sBAAsBpI,UAAW+G,KACnD,cAAC,KAAD,CAAOqB,KAAK,IAAIpI,UAAWC,W,UCzBpBoI,GAhBE,SAACpY,GAAW,IAAD,EACUvB,IAAMC,SAAS,CAAEjB,KAAM,KADjC,mBACnB4a,EADmB,KACPnW,EADO,KAE1B,OACE,cAAC,gBAAD,UACE,cAAC,IAAD,CAAU9D,MAAOD,EAAWC,MAA5B,SACE,cAAC,KAAD,CAAamM,QAAS,KAAM+N,UAAWna,EAAWE,WAAlD,SACE,eAAC8C,EAAD,CAAqBuE,MAAO,CAAE2S,aAAYnW,iBAA1C,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,cCPGqW,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFjZ,SAASkZ,eAAe,SAM1BZ,O","file":"static/js/main.d1c152ad.chunk.js","sourcesContent":["export const DOMAINPATH = \"/PlatyPlus\";\r\nexport const API_END_POINT = \"https://fakestoreapi.com\";\r\n\r\nexport const LOGINUSER = \"LOGINUSER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const INCREASE_QUANTITY = \"INCREASE_QUANTITY\";\r\nexport const DECREASE_QUANTITY = \"DECREASE_QUANTITY\";\r\nexport const GET_ALL_CART_PRODUCTS = \"GET_ALL_CART_PRODUCTS\";\r\nexport const GET_NUMBER_CART = \"GET_NUMBER_CART\";\r\nexport const ADD_CART = \"ADD_CART\";\r\nexport const UPDATE_CART = \"UPDATE_CART\";\r\nexport const DELETE_CART = \"DELETE_CART\";\r\n","import * as ACTIONSTATES from \"./ActionTypes\";\r\nimport get from \"get-value\";\r\n\r\nconst initState = {\r\n  numberCart: 0,\r\n  Carts: [],\r\n  userDetails: {},\r\n};\r\n\r\nconst Reducer = (state = initState, action = {}) => {\r\n  switch (action.type) {\r\n    case ACTIONSTATES.LOGINUSER: {\r\n      return {\r\n        ...state,\r\n        userDetails: { ...action.payload },\r\n      };\r\n    }\r\n    case ACTIONSTATES.LOGOUT:\r\n      delete state.userDetails;\r\n      return { ...state };\r\n\r\n    case ACTIONSTATES.GET_ALL_CART_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n\r\n    case ACTIONSTATES.GET_NUMBER_CART:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case ACTIONSTATES.ADD_CART: {\r\n      const Cart = state.Carts || [];\r\n      if (state.numberCart === 0) {\r\n        let cart = {\r\n          id: action.payload.id,\r\n          quantity: 1,\r\n          name: action.payload.title,\r\n          image: action.payload.image,\r\n          price: action.payload.price,\r\n        };\r\n        Cart.push(cart);\r\n      } else {\r\n        let check = false;\r\n        Cart.forEach((item, idx) => {\r\n          if (item.id === action.payload.id) {\r\n            Cart[idx].quantity++;\r\n            check = true;\r\n          }\r\n        });\r\n\r\n        if (!check) {\r\n          const newItem = {\r\n            id: action.payload.id,\r\n            quantity: 1,\r\n            name: action.payload.title,\r\n            image: action.payload.image,\r\n            price: action.payload.price,\r\n          };\r\n          Cart.push(newItem);\r\n        }\r\n      }\r\n      return {\r\n        ...JSON.parse(JSON.stringify(state)),\r\n        numberCart: state.numberCart + 1,\r\n      };\r\n    }\r\n\r\n    case ACTIONSTATES.INCREASE_QUANTITY: {\r\n      const currentProduct = get(action, \"payload\", {});\r\n      const existingCart = get(state, \"Carts\", []);\r\n      const currentProductInStore = existingCart.find(\r\n        (data) => data.id === currentProduct.id\r\n      );\r\n      currentProductInStore.quantity++;\r\n      state.numberCart++;\r\n      return {\r\n        ...JSON.parse(JSON.stringify(state)),\r\n      };\r\n    }\r\n    case ACTIONSTATES.DECREASE_QUANTITY: {\r\n      const currentProduct = get(action, \"payload\", {});\r\n      const existingCart = get(state, \"Carts\", []);\r\n      const currentProductInStore = existingCart.find(\r\n        (data) => data.id === currentProduct.id\r\n      );\r\n      if (currentProductInStore.quantity > 1) {\r\n        currentProductInStore.quantity--;\r\n        state.numberCart--;\r\n      }\r\n      return {\r\n        ...JSON.parse(JSON.stringify(state)),\r\n      };\r\n    }\r\n\r\n    case ACTIONSTATES.DELETE_CART: {\r\n      const currentProduct = get(action, \"payload\", {});\r\n      const existingCart = get(state, \"Carts\", []);\r\n      const currentProductInStore = existingCart.find(\r\n        (data) => data.id === currentProduct.id\r\n      );\r\n      const productQuantity = get(currentProductInStore, \"quantity\", 1);\r\n      return {\r\n        ...JSON.parse(JSON.stringify(state)),\r\n        numberCart: state.numberCart - productQuantity,\r\n        Carts: state.Carts.filter((item) => {\r\n          return item.id !== currentProductInStore.id;\r\n        }),\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import { createStore } from \"redux\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport Reducer from \"./Reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, Reducer);\r\nconst createStoreWithPersistedReducer = createStore(persistedReducer);\r\n\r\n//https://www.npmjs.com/package/redux-persist\r\nconst persistore = persistStore(createStoreWithPersistedReducer);\r\n\r\nconst reduxStore = { store: createStoreWithPersistedReducer, persistore };\r\nexport default reduxStore;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nexport const useDate = () => {\r\n  const locale = \"en\";\r\n  const [today, setDate] = React.useState(new Date()); // Save the current date to be able to trigger an update\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      // Creates an interval which will update the current data every minute\r\n      // This will trigger a rerender every component that uses the useDate hook.\r\n      setDate(new Date());\r\n    }, 60 * 1000);\r\n    return () => {\r\n      clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n    };\r\n  }, []);\r\n\r\n  const day = today.toLocaleDateString(locale, { weekday: \"long\" });\r\n  const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, {\r\n    month: \"long\",\r\n  })}\\n\\n`;\r\n\r\n  const hour = today.getHours();\r\n  const wish = `Good ${\r\n    (hour < 12 && \"Morning\") || (hour < 17 && \"Afternoon\") || \"Evening\"\r\n  }, `;\r\n\r\n  const time = today.toLocaleTimeString(locale, {\r\n    hour: \"numeric\",\r\n    hour12: true,\r\n    minute: \"numeric\",\r\n  });\r\n\r\n  return {\r\n    date,\r\n    time,\r\n    wish,\r\n  };\r\n};\r\n\r\nexport const setToastMessage = (props) => {\r\n  ReactDOM.createPortal(<ToastContainer />, document.body);\r\n\r\n  const { message, status } = props;\r\n  const statusMark =\r\n    status === \"success\" ? (\r\n      <i className={\"fa fa-check mr-2\"} aria-hidden={true} />\r\n    ) : status === \"fail\" ? (\r\n      <i className={\"fas fa-times mr-2\"} aria-hidden={true} />\r\n    ) : status === \"warning\" ? (\r\n      <i className={\"fas fa-exclamation-triangle mr-2\"} aria-hidden={true} />\r\n    ) : (\r\n      <React.Fragment />\r\n    );\r\n\r\n  toast.dark(\r\n    <p className=\"mb-0\">\r\n      {statusMark}\r\n      {message}\r\n    </p>,\r\n    {\r\n      position: \"bottom-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      className: `${status}`,\r\n    }\r\n  );\r\n};\r\n","import React from \"react\";\r\nconst ContextData = React.createContext({});\r\nexport const ContextDataProvider = ContextData.Provider;\r\nexport default ContextData;\r\n","import React from \"react\";\r\nimport { Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport { GetCategory } from \"./GetCategory\";\r\nimport \"./styles.scss\";\r\n\r\nexport const CategoryNavBar = () => {\r\n  const categoryList = GetCategory();\r\n  return (\r\n    <Nav className=\"category-dropdown mr-auto my-2 my-lg-0\" navbarScroll>\r\n      <NavDropdown title=\"Category\" id={\"category-dropdown-title\"}>\r\n        {categoryList?.map((data, index) => {\r\n          return (\r\n            <LinkContainer\r\n              key={data + index}\r\n              to={`${DOMAINPATH}/category/${encodeURIComponent(data)}`}\r\n            >\r\n              <Nav.Link className=\"px-3 text-capitalize\">{data}</Nav.Link>\r\n            </LinkContainer>\r\n          );\r\n        })}\r\n      </NavDropdown>\r\n    </Nav>\r\n  );\r\n};\r\n","import get from \"get-value\";\r\nimport React, { useContext } from \"react\";\r\nimport useFetch from \"use-http\";\r\nimport { API_END_POINT } from \"../../redux/ActionTypes\";\r\nimport ContextData from \"../../routes/context/Context\";\r\nimport \"./styles.scss\";\r\n\r\nexport const GetCategory = () => {\r\n  const context = useContext(ContextData);\r\n  const contextData = get(context, \"contextObj\", {});\r\n  const [categoryList, setCategoryList] = React.useState([]);\r\n  const { get: getResponse, response } = useFetch(API_END_POINT);\r\n\r\n  React.useEffect(() => {\r\n    getAllCategory();\r\n  }, []);\r\n\r\n  const getAllCategory = async () => {\r\n    const categoryListResponse = await getResponse(\"/products/categories\");\r\n    if (response.ok) {\r\n      contextData[\"categoryList\"] = categoryListResponse;\r\n      context.setContextObj(contextData);\r\n      setCategoryList(categoryListResponse);\r\n    }\r\n  };\r\n\r\n  return categoryList;\r\n};\r\n","import get from \"get-value\";\r\n\r\nexport const LoadingSpinner = (props) => {\r\n  const className = get(props, \"className\", \"\");\r\n  return (\r\n    <div className={className}>\r\n      <svg\r\n        version=\"1.1\"\r\n        id=\"L1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 100 100\"\r\n        enableBackground=\"new 0 0 100 100\"\r\n        xmlSpace=\"preserve\"\r\n      >\r\n        <circle\r\n          fill=\"none\"\r\n          stroke=\"white\"\r\n          strokeWidth=\"6\"\r\n          strokeMiterlimit=\"15\"\r\n          strokeDasharray=\"14.2472,14.2472\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"47\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            attributeType=\"XML\"\r\n            type=\"rotate\"\r\n            dur=\"5s\"\r\n            from=\"0 50 50\"\r\n            to=\"360 50 50\"\r\n            repeatCount=\"indefinite\"\r\n          ></animateTransform>\r\n        </circle>\r\n        <circle\r\n          fill=\"none\"\r\n          stroke=\"white\"\r\n          strokeWidth=\"1\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeDasharray=\"10,10\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"39\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            attributeType=\"XML\"\r\n            type=\"rotate\"\r\n            dur=\"5s\"\r\n            from=\"0 50 50\"\r\n            to=\"-360 50 50\"\r\n            repeatCount=\"indefinite\"\r\n          ></animateTransform>\r\n        </circle>\r\n        <g fill=\"#212529\">\r\n          <rect x=\"30\" y=\"35\" width=\"5\" height=\"30\" fill=\"white\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.1\"\r\n            ></animateTransform>\r\n          </rect>\r\n          <rect x=\"40\" y=\"35\" width=\"5\" height=\"30\" fill=\"white\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.2\"\r\n            ></animateTransform>\r\n          </rect>\r\n          <rect x=\"50\" y=\"35\" width=\"5\" height=\"30\" fill=\"white\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.3\"\r\n            ></animateTransform>\r\n          </rect>\r\n          <rect x=\"60\" y=\"35\" width=\"5\" height=\"30\" fill=\"white\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.4\"\r\n            ></animateTransform>\r\n          </rect>\r\n          <rect x=\"70\" y=\"35\" width=\"5\" height=\"30\" fill=\"white\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.5\"\r\n            ></animateTransform>\r\n          </rect>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\nexport const ImageLoadingHolder = (props) => {\r\n  const className = get(props, \"className\", \"\");\r\n\r\n  return (\r\n    <div className={className}>\r\n      <svg\r\n        version=\"1.1\"\r\n        id=\"Layer_1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 100 100\"\r\n        enableBackground=\"new 0 0 100 100\"\r\n        xmlSpace=\"preserve\"\r\n      >\r\n        <rect\r\n          fill=\"#000\"\r\n          width=\"3\"\r\n          height=\"100\"\r\n          transform=\"translate(0) rotate(180 3 50)\"\r\n        >\r\n          <animate\r\n            attributeName=\"height\"\r\n            attributeType=\"XML\"\r\n            dur=\"1s\"\r\n            values=\"30; 100; 30\"\r\n            repeatCount=\"indefinite\"\r\n          ></animate>\r\n        </rect>\r\n        <rect\r\n          x=\"17\"\r\n          fill=\"#000\"\r\n          width=\"3\"\r\n          height=\"100\"\r\n          transform=\"translate(0) rotate(180 20 50)\"\r\n        >\r\n          <animate\r\n            attributeName=\"height\"\r\n            attributeType=\"XML\"\r\n            dur=\"1s\"\r\n            values=\"30; 100; 30\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.1s\"\r\n          ></animate>\r\n        </rect>\r\n        <rect\r\n          x=\"40\"\r\n          fill=\"#000\"\r\n          width=\"3\"\r\n          height=\"100\"\r\n          transform=\"translate(0) rotate(180 40 50)\"\r\n        >\r\n          <animate\r\n            attributeName=\"height\"\r\n            attributeType=\"XML\"\r\n            dur=\"1s\"\r\n            values=\"30; 100; 30\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.3s\"\r\n          ></animate>\r\n        </rect>\r\n        <rect\r\n          x=\"60\"\r\n          fill=\"#000\"\r\n          width=\"3\"\r\n          height=\"100\"\r\n          transform=\"translate(0) rotate(180 58 50)\"\r\n        >\r\n          <animate\r\n            attributeName=\"height\"\r\n            attributeType=\"XML\"\r\n            dur=\"1s\"\r\n            values=\"30; 100; 30\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.5s\"\r\n          ></animate>\r\n        </rect>\r\n        <rect\r\n          x=\"80\"\r\n          fill=\"#000\"\r\n          width=\"3\"\r\n          height=\"100\"\r\n          transform=\"translate(0) rotate(180 76 50)\"\r\n        >\r\n          <animate\r\n            attributeName=\"height\"\r\n            attributeType=\"XML\"\r\n            dur=\"1s\"\r\n            values=\"30; 100; 30\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"0.1s\"\r\n          ></animate>\r\n        </rect>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\nexport const CartIcon = (props) => {\r\n  const disableOtherIcon = get(props, \"disableOtherIcon\", false);\r\n  return (\r\n    <>\r\n      {!disableOtherIcon && (\r\n        <svg\r\n          className=\"add-to-cart-box box-1\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <rect width=\"24\" height=\"24\" rx=\"2\" fill=\"#ffffff\" />\r\n        </svg>\r\n      )}\r\n      {!disableOtherIcon && (\r\n        <svg\r\n          className=\"add-to-cart-box box-2\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <rect width=\"24\" height=\"24\" rx=\"2\" fill=\"#ffffff\" />\r\n        </svg>\r\n      )}\r\n      <svg\r\n        className=\"cart-icon\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"#ffffff\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\r\n        <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\r\n        <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\r\n      </svg>\r\n      {!disableOtherIcon && (\r\n        <svg\r\n          className=\"tick\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n          <path\r\n            fill=\"#ffffff\"\r\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM9.29 16.29L5.7 12.7c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0L10 14.17l6.88-6.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-7.59 7.59c-.38.39-1.02.39-1.41 0z\"\r\n          />\r\n        </svg>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import * as ACTIONSTATES from \"./ActionTypes\";\r\n\r\nexport function GetAllCartProduct(payload) {\r\n  return {\r\n    type: ACTIONSTATES.GET_ALL_CART_PRODUCTS,\r\n    payload,\r\n  };\r\n}\r\n\r\n/*GET NUMBER CART*/\r\nexport function GetNumberCart() {\r\n  return {\r\n    type: ACTIONSTATES.GET_NUMBER_CART,\r\n  };\r\n}\r\n\r\nexport function AddCart(payload) {\r\n  return {\r\n    type: ACTIONSTATES.ADD_CART,\r\n    payload,\r\n  };\r\n}\r\nexport function UpdateCart(payload) {\r\n  return {\r\n    type: ACTIONSTATES.UPDATE_CART,\r\n    payload,\r\n  };\r\n}\r\nexport function DeleteCart(payload) {\r\n  return {\r\n    type: ACTIONSTATES.DELETE_CART,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function IncreaseQuantity(payload) {\r\n  return {\r\n    type: ACTIONSTATES.INCREASE_QUANTITY,\r\n    payload,\r\n  };\r\n}\r\nexport function DecreaseQuantity(payload) {\r\n  return {\r\n    type: ACTIONSTATES.DECREASE_QUANTITY,\r\n    payload,\r\n  };\r\n}\r\n","import get from \"get-value\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  FormControl,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  DecreaseQuantity,\r\n  DeleteCart,\r\n  IncreaseQuantity,\r\n} from \"../../redux/Actions\";\r\nimport { ImageLoadingHolder } from \"../../assets/svg\";\r\n\r\nconst QuantityBox = (props) => {\r\n  const quantityValue = get(props, \"quantity\", 1);\r\n  const cartItem = get(props, \"item\", 1);\r\n  const increaseProductQty = get(props, \"IncreaseQuantity\", () => {});\r\n  const decreaseProductQty = get(props, \"DecreaseQuantity\", () => {});\r\n  return (\r\n    <div className=\"quantity-input d-flex\">\r\n      <Button\r\n        className=\"quantity-input-sign quantity-input-left\"\r\n        onClick={() => decreaseProductQty(cartItem)}\r\n        disabled={quantityValue === 1}\r\n        variant=\"outline-dark\"\r\n      >\r\n        {\"-\"}\r\n      </Button>\r\n      <FormControl\r\n        className=\"quantity-input-box\"\r\n        type={\"text\"}\r\n        value={quantityValue}\r\n        readOnly\r\n      />\r\n      <Button\r\n        className=\"quantity-input-sign quantity-input-right\"\r\n        onClick={() => increaseProductQty(cartItem)}\r\n        disabled={quantityValue === 10}\r\n        variant=\"outline-dark\"\r\n      >\r\n        {\"+\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CartProductList = (props) => {\r\n  const showTitle = get(props, \"showTitle\", true);\r\n  const showImage = get(props, \"showImage\", true);\r\n  const showCartIndex = get(props, \"showCartIndex\", true);\r\n  const isCheckOut = get(props, \"fromCheckOut\", true);\r\n  const columnWidth = get(props, \"columnWidth\", {});\r\n  const cartProducts = get(props, \"cartProduct\", []);\r\n  const deleteProductFromCart = get(props, \"DeleteCart\", () => {});\r\n  const cartTotal = cartProducts\r\n    .map((data) => {\r\n      const qty = get(data, \"quantity\", 0);\r\n      const unitPrice = get(data, \"price\", 0);\r\n      const totalPrice = qty * unitPrice;\r\n      const priceFormat = totalPrice?.toFixed(2);\r\n      return Number(priceFormat);\r\n    })\r\n    .reduce((acc, price) => {\r\n      const initialPrice = Number(acc);\r\n      const modifiedPrice = initialPrice + price;\r\n      const priceFormat = modifiedPrice?.toFixed(2);\r\n      return Number(priceFormat);\r\n    });\r\n\r\n  return (\r\n    <Container>\r\n      {showTitle && (\r\n        <Row>\r\n          <Col md={get(columnWidth, \"index\", 0)}>S.No</Col>\r\n          <Col md={get(columnWidth, \"name\", 0)}>Name</Col>\r\n          <Col className=\"text-center\" md={get(columnWidth, \"quantity\", 0)}>\r\n            Quantity\r\n          </Col>\r\n          <Col md={get(columnWidth, \"price1\", 0)}>Unit Price</Col>\r\n          <Col md={get(columnWidth, \"price2\", 0)}>Product Total</Col>\r\n        </Row>\r\n      )}\r\n      <div className=\"divider\" />\r\n      {cartProducts.map((data, index) => {\r\n        const productUnitPrice = get(data, \"price\", 0).toFixed(2);\r\n        const productTotalPrice = (\r\n          get(data, \"quantity\", 0) * productUnitPrice\r\n        ).toFixed(2);\r\n        return (\r\n          <Row\r\n            key={`cart-item-${index}`}\r\n            className={\"cart-item align-items-center mb-3\"}\r\n          >\r\n            {showCartIndex && (\r\n              <Col\r\n                className={\"cart-item-field\"}\r\n                md={get(columnWidth, \"index\", 0)}\r\n              >\r\n                {index + 1}\r\n              </Col>\r\n            )}\r\n            {showImage && (\r\n              <Col\r\n                className={\"cart-item-field\"}\r\n                md={get(columnWidth, \"image\", 0)}\r\n              >\r\n                <LazyLoad\r\n                  placeholder={\r\n                    <ImageLoadingHolder className={\"product-image-loader\"} />\r\n                  }\r\n                  debounce={400}\r\n                  height={\"400px\"}\r\n                  once={true}\r\n                >\r\n                  <Image\r\n                    src={get(data, \"image\", \"\")}\r\n                    alt={get(data, \"title\", \"\")}\r\n                  />\r\n                </LazyLoad>\r\n              </Col>\r\n            )}\r\n            <Col className={\"cart-item-field\"} md={get(columnWidth, \"name\", 0)}>\r\n              {get(data, \"name\", \"\")}\r\n            </Col>\r\n            <Col\r\n              className={\"cart-item-field\"}\r\n              md={get(columnWidth, \"quantity\", 0)}\r\n            >\r\n              <QuantityBox\r\n                item={data}\r\n                quantity={get(data, \"quantity\", 0)}\r\n                {...props}\r\n              />\r\n            </Col>\r\n            <Col\r\n              className={\"cart-item-field\"}\r\n              md={get(columnWidth, \"price1\", 0)}\r\n            >\r\n              <React.Fragment>\r\n                <span className={\"mr-1\"}>{\"$\"}</span>\r\n                {productUnitPrice}\r\n              </React.Fragment>\r\n            </Col>\r\n            <Col\r\n              className={\"cart-item-field\"}\r\n              md={get(columnWidth, \"price2\", 0) / 2}\r\n            >\r\n              <React.Fragment>\r\n                <span className={\"mr-1\"}>{\"$\"}</span>\r\n                {productTotalPrice}\r\n              </React.Fragment>\r\n            </Col>\r\n            <Col\r\n              className={\"cart-item-field\"}\r\n              md={get(columnWidth, \"price2\", 0) / 2}\r\n            >\r\n              <React.Fragment>\r\n                <Button\r\n                  variant={\"dark\"}\r\n                  onClick={() => deleteProductFromCart(data)}\r\n                >\r\n                  Remove\r\n                </Button>\r\n              </React.Fragment>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      })}\r\n      <div className=\"divider\" />\r\n      <Row className={`cart-total${isCheckOut ? \" justify-content-end\" : \"\"}`}>\r\n        <Col md={isCheckOut ? 2 : 1}>Total Price</Col>\r\n        <Col className=\"cart-total-value\" md={2}>\r\n          <React.Fragment>\r\n            <span className={\"mr-1\"}>{\"$\"}</span>\r\n            {cartTotal}\r\n          </React.Fragment>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cartProduct: state?.Carts,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    IncreaseQuantity: (item) => dispatch(IncreaseQuantity(item)),\r\n    DecreaseQuantity: (item) => dispatch(DecreaseQuantity(item)),\r\n    DeleteCart: (item) => dispatch(DeleteCart(item)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartProductList);\r\n","import get from \"get-value\";\r\nimport React from \"react\";\r\nimport { Button, Image, Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartIcon } from \"../../../assets/svg\";\r\nimport {\r\n  DecreaseQuantity,\r\n  DeleteCart,\r\n  IncreaseQuantity,\r\n} from \"../../../redux/Actions\";\r\nimport { DOMAINPATH } from \"../../../redux/ActionTypes\";\r\nimport reduxStore from \"../../../redux/store\";\r\nimport CartProductList from \"../../CartProductList/CartProductList\";\r\nimport \"./styles.scss\";\r\n\r\nconst store = get(reduxStore, \"store\", {});\r\n\r\nconst EmptyCartBody = (props) => {\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center\">\r\n      <Image src={process.env.PUBLIC_URL + \"/images/empty-cart.png\"} />\r\n      <h3 className=\"mb-3\">No Products Available in Cart</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CartOverlay = (props) => {\r\n  const [toShowCart, setToShowCart] = React.useState(false);\r\n  const handleCartClose = () => setToShowCart(false);\r\n  const handleCartShow = () => setToShowCart(true);\r\n  const cartCount = get(props, \"cartCount\", 0);\r\n  const cartBodyProps = {\r\n    showImage: false,\r\n    columnWidth: {\r\n      index: 1,\r\n      image: 0,\r\n      name: 4,\r\n      quantity: 3,\r\n      price1: 2,\r\n      price2: 2,\r\n    },\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div onClick={handleCartShow} className=\"cart-icon-wrapper d-flex\">\r\n        <CartIcon disableOtherIcon={true} />\r\n        <div className=\"cart-count\">{cartCount}</div>\r\n      </div>\r\n      <Modal\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        variant={\"dark\"}\r\n        show={toShowCart}\r\n        onHide={handleCartClose}\r\n        dialogClassName={\"shopping-cart-modal\"}\r\n        aria-labelledby=\"cart-modal\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Shopping Bag</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"cart-body\">\r\n          {cartCount ? (\r\n            <CartProductList {...cartBodyProps} {...props} />\r\n          ) : (\r\n            <EmptyCartBody />\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"dark\"\r\n            as={Link}\r\n            to={`${DOMAINPATH}/checkout`}\r\n            onClick={() => setToShowCart(false)}\r\n            disabled={!cartCount}\r\n          >\r\n            CHECKOUT\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userDetails: state?.userDetails,\r\n    cartCount: state?.numberCart,\r\n    cartProduct: state?.Carts,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    IncreaseQuantity: (item) => dispatch(IncreaseQuantity(item)),\r\n    DecreaseQuantity: (item) => dispatch(DecreaseQuantity(item)),\r\n    DeleteCart: (item) => dispatch(DeleteCart(item)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartOverlay);\r\n","import get from \"get-value\";\r\nimport { isEmpty } from \"lodash\";\r\nimport React from \"react\";\r\nimport { Button, Form, FormControl, Navbar, Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport reduxStore from \"../../redux/store\";\r\nimport { setToastMessage, useDate } from \"../../utils/utils\";\r\nimport { CategoryNavBar } from \"./CategoryNavBar\";\r\nimport \"./styles.scss\";\r\nimport { DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport CartOverlay from \"./CartOverlay/CartOverlay\";\r\n\r\nconst store = get(reduxStore, \"store\", {});\r\nconst Header = (props) => {\r\n  const [headerHeight, setHeaderHeight] = React.useState(0);\r\n  React.useEffect(() => {\r\n    const headerHeightNew =\r\n      document.querySelector(\".header-nav-bar\").offsetHeight;\r\n    if (headerHeight !== headerHeightNew) {\r\n      setHeaderHeight(headerHeightNew);\r\n    }\r\n  });\r\n  const userDetails = get(props, \"userDetails\", {});\r\n  const wish = useDate().wish;\r\n\r\n  // const CartOverlay = (props) => {\r\n  //   console.log(\"toShowCart \", toShowCart);\r\n  //   return (\r\n\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <header style={{ height: `${headerHeight}px` }}>\r\n      <Navbar\r\n        fixed=\"top\"\r\n        className=\"header-nav-bar bg-black\"\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n      >\r\n        <Link to=\"/PlatyPlus\">\r\n          <Navbar.Brand className=\"glow\">PLATYPLUS</Navbar.Brand>\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse className=\"justify-space-between\" id=\"navbarScroll\">\r\n          <CategoryNavBar />\r\n          {isEmpty(userDetails) ? (\r\n            <Link to=\"/PlatyPlus/login\">\r\n              <Navbar.Brand>Login</Navbar.Brand>\r\n            </Link>\r\n          ) : (\r\n            <React.Fragment>\r\n              <p className=\"my-auto mr-2\" style={{ color: \"white\" }}>\r\n                {wish + \" Praveen\"}\r\n              </p>\r\n              <Button\r\n                className=\"mr-2\"\r\n                variant=\"outline-light\"\r\n                onClick={() => {\r\n                  store.dispatch({ type: \"LOGOUT\" });\r\n                  setToastMessage({\r\n                    status: \"success\",\r\n                    message: \"User Signed Out\",\r\n                  });\r\n                }}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n          <CartOverlay />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userDetails: state?.userDetails,\r\n    cartCount: state?.numberCart,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Container,\r\n  Navbar,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport \"./styles.scss\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDate } from \"../../utils/utils\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer className=\"main-footer bg-black\">\r\n      <Container>\r\n        <Navbar className=\"bg-black\" variant=\"dark\">\r\n          <Nav className=\"w-100\">\r\n            <Row className=\"d-flex w-100 text-center\">\r\n              <Col>\r\n                <Nav.Link>{useDate().date + \" \" + useDate().time}</Nav.Link>\r\n              </Col>\r\n              <Col>\r\n                <ul className=\"list-inline social-buttons\">\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-facebook-f\"></i>{\" \"}\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-linkedin-in\"></i>{\" \"}\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                </ul>{\" \"}\r\n              </Col>\r\n            </Row>\r\n          </Nav>\r\n        </Navbar>\r\n      </Container>\r\n      <ToastContainer />\r\n    </footer>\r\n  );\r\n};\r\n","import get from \"get-value\";\r\nimport React from \"react\";\r\nimport { Card, Image } from \"react-bootstrap\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImageLoadingHolder } from \"../../assets/svg\";\r\nimport { DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport \"./styles.scss\";\r\n\r\nconst ProductInfo = (props) => {\r\n  const {\r\n    id,\r\n    image: imageSrc = \"\",\r\n    title = \"\",\r\n    description = \"\",\r\n    price = \"\",\r\n  } = get(props, \"data\", {});\r\n  return (\r\n    <Card className=\"text-center\">\r\n      <Link to={`${DOMAINPATH}/product/${id}`}>\r\n        <Card.Header>\r\n          <LazyLoad\r\n            placeholder={\r\n              <ImageLoadingHolder className={\"product-image-loader\"} />\r\n            }\r\n            debounce={500}\r\n            height={\"250px\"}\r\n          >\r\n            <Image src={imageSrc} alt={title} />\r\n          </LazyLoad>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            <p className=\"product-desc\">{description}</p>\r\n          </Card.Subtitle>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-muted\">{`Price $${price}`}</Card.Footer>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;\r\n","import get from \"get-value\";\r\nimport React, { useContext } from \"react\";\r\nimport { Accordion, Card, CardDeck, Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFetch from \"use-http\";\r\nimport { LoadingSpinner } from \"../../assets/svg\";\r\nimport ProductInfo from \"../../components/ProductInfo/ProductInfo\";\r\nimport { API_END_POINT, DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport ContextData from \"../../routes/context/Context\";\r\nimport \"./styles.scss\";\r\n\r\nconst PLP = (props) => {\r\n  const context = useContext(ContextData);\r\n  const [categoryResponse, setCategoryResponse] = React.useState([]);\r\n  const getContextData = get(context, \"contextObj\", {});\r\n  const { get: getResponse, response, loading } = useFetch(API_END_POINT);\r\n  const categoryListFromContext = get(getContextData, \"categoryList\", []);\r\n  const categoryId = decodeURIComponent(\r\n    get(props, \"match.params.categoryName\", \"\")\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    getCategoryResponse();\r\n  }, [categoryId]);\r\n\r\n  const getCategoryResponse = async () => {\r\n    const categoryResponse = await getResponse(\r\n      `/products/category/${categoryId}`\r\n    );\r\n    if (response.ok) {\r\n      setCategoryResponse(categoryResponse);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"plp-container\">\r\n      {loading ? (\r\n        <LoadingSpinner className=\"plp-loading-spinner d-flex justify-content-center\" />\r\n      ) : (\r\n        <Row className=\"mw-100 my-5\">\r\n          <Col>\r\n            <Accordion defaultActiveKey=\"0\" style={{ color: \"white\" }}>\r\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                Category\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body className=\"category-pane\">\r\n                  {categoryListFromContext?.map((categoryName, index) => {\r\n                    return (\r\n                      <Link\r\n                        className={`category-list  ${\r\n                          categoryId === categoryName ? \"glow\" : \"\"\r\n                        }`}\r\n                        key={categoryName + index}\r\n                        to={`${DOMAINPATH}/category/${encodeURIComponent(\r\n                          categoryName\r\n                        )}`}\r\n                      >\r\n                        {categoryName}\r\n                      </Link>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Accordion>\r\n          </Col>\r\n          <Col style={{ flexGrow: 5 }}>\r\n            <CardDeck className=\"plp-wrapper\">\r\n              {categoryResponse.map((data) => {\r\n                return <ProductInfo data={data} />;\r\n              })}\r\n            </CardDeck>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default PLP;\r\n","import React, { useRef, useState } from \"react\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\nimport \"swiper/components/lazy/lazy.scss\";\r\nimport \"swiper/components/navigation/navigation.min.css\";\r\nimport \"swiper/components/effect-fade/effect-fade.min.css\";\r\nimport \"swiper/components/effect-coverflow/effect-coverflow.min.css\";\r\nimport \"./styles.scss\";\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, {\r\n  EffectFade,\r\n  EffectCoverflow,\r\n  Pagination,\r\n  Navigation,\r\n  Autoplay,\r\n} from \"swiper/core\";\r\nimport get from \"get-value\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { ImageLoadingHolder } from \"../../assets/svg\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Autoplay, Navigation, EffectCoverflow, EffectFade, Pagination]);\r\n\r\nexport default function SwiperComponent(props) {\r\n  const [imageLoaded, setImageLoaded] = React.useState(false);\r\n  const swiperProps = get(props, \"swiperProps\", {});\r\n  const lazyProps = get(props, \"lazyProps\", {});\r\n  const children = get(props, \"children\", []);\r\n  const isLoop = get(props, \"loop\", false);\r\n  const isLazy = get(props, \"lazy\", false);\r\n  const imageDelay = get(props, \"imageDelay\", 0);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Swiper\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n        className=\"mySwiper\"\r\n        style={{\r\n          \"--swiper-navigation-color\": \"#000\",\r\n          \"--swiper-pagination-color\": \"#000\",\r\n        }}\r\n        autoplay={get(props, \"autoPlay\", {})}\r\n        navigation={get(props, \"navigation\", false)}\r\n        loop={isLoop}\r\n        lazy={isLazy}\r\n        autoHeight={false}\r\n        effect={get(props, \"effect\", \"\")}\r\n        {...swiperProps}\r\n      >\r\n        {children?.map((data, index) => {\r\n          const imageLink = get(data, \"imgSrc\", \"\");\r\n          if (imageLink) {\r\n            return (\r\n              <SwiperSlide key={`${get(data, \"alt\", \"\")}-${index}`}>\r\n                <Link to={get(data, \"href\", \"\")}>\r\n                  <LazyLoad\r\n                    placeholder={\r\n                      <ImageLoadingHolder\r\n                        className={\"swiper-lazy-place-holder\"}\r\n                      />\r\n                    }\r\n                    {...lazyProps}\r\n                  >\r\n                    <Image\r\n                      className={`smooth-image ${\r\n                        imageLoaded ? \"image-visible\" : \"image-hidden\"\r\n                      }`}\r\n                      src={imageLink}\r\n                      onLoad={() => {\r\n                        setTimeout(() => {\r\n                          setImageLoaded(true);\r\n                        }, imageDelay);\r\n                      }}\r\n                    />\r\n                  </LazyLoad>\r\n                </Link>\r\n              </SwiperSlide>\r\n            );\r\n          } else {\r\n            return <React.Fragment />;\r\n          }\r\n        })}\r\n      </Swiper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import get from \"get-value\";\r\nimport React, { useContext } from \"react\";\r\nimport { Accordion, Card, CardDeck, Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFetch from \"use-http\";\r\nimport { LoadingSpinner } from \"../../assets/svg\";\r\nimport ProductInfo from \"../../components/ProductInfo/ProductInfo\";\r\nimport { API_END_POINT, DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport ContextData from \"../../routes/context/Context\";\r\nimport SwiperComponent from \"../Swiper/Swiper\";\r\nimport \"./styles.scss\";\r\n\r\nconst Recommendations = (props) => {\r\n  const [recommendationsResponse, setRecommendationsResponse] = React.useState(\r\n    []\r\n  );\r\n  const { get: getResponse, response, loading } = useFetch(API_END_POINT);\r\n\r\n  React.useEffect(() => {\r\n    getRecommendationsResponse();\r\n  }, []);\r\n\r\n  const getRecommendationsResponse = async () => {\r\n    const productsResponse = await getResponse(`/products?limit=10`);\r\n    if (response.ok) {\r\n      setRecommendationsResponse(productsResponse);\r\n    }\r\n  };\r\n  const productCarouselOption = {\r\n    grabCursor: true,\r\n    centeredSlides: true,\r\n    slidesPerView: \"auto\",\r\n    coverflowEffect: {\r\n      rotate: 50,\r\n      stretch: 0,\r\n      depth: 100,\r\n      modifier: 1,\r\n      slideShadows: true,\r\n    },\r\n  };\r\n  const swiperChildren = recommendationsResponse.length\r\n    ? recommendationsResponse.map((data) => {\r\n        return {\r\n          alt: data.title,\r\n          imgSrc: data.image,\r\n          href: `${DOMAINPATH}/product/${data.id}`,\r\n        };\r\n      })\r\n    : [];\r\n  return (\r\n    <Row className=\"recommendation-products my-5\">\r\n      <h3 className=\"recommended-title\">Recommended Products:</h3>\r\n      <SwiperComponent\r\n        swiperProps={{\r\n          coverflowEffect: productCarouselOption,\r\n          effect: \"coverflow\",\r\n          grabCursor: true,\r\n          centeredSlides: true,\r\n          slidesPerView: \"auto\",\r\n          pagination: false,\r\n        }}\r\n        children={swiperChildren}\r\n        lazy={true}\r\n        lazyProps={{ debounce: 1000 }}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\nexport default Recommendations;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Recommendations from \"../../components/Recommendations/Recommendations\";\r\nimport SwiperComponent from \"../../components/Swiper/Swiper\";\r\nimport { DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport \"./styles.scss\";\r\n\r\nconst mainBanner = [\r\n  {\r\n    imgSrc:\r\n      \"https://ckssolutions.co.in/hardware/wp-content/uploads/2020/07/banner.jpg\",\r\n    href: `${DOMAINPATH}/category/electronics`,\r\n    alt: \"electronic-category\",\r\n  },\r\n  {\r\n    imgSrc:\r\n      \"https://dcassetcdn.com/design_img/2886222/654209/654209_15934433_2886222_90f467d9_image.jpg\",\r\n    href: `${DOMAINPATH}/category/jewelery`,\r\n    alt: \"jewelery-category\",\r\n  },\r\n  {\r\n    imgSrc:\r\n      \"https://www.designhill.com/design-blog/wp-content/uploads/2017/07/fashion-banner.jpg\",\r\n    href: `${DOMAINPATH}/category/men's%20clothing`,\r\n    alt: \"fashion-category\",\r\n  },\r\n];\r\n\r\nconst HomePage = (props) => {\r\n  useEffect(() => {\r\n    document.title = \"Welcome User\";\r\n  });\r\n  const lazyLoadProps = {\r\n    once: true,\r\n    debounce: 400,\r\n  };\r\n  return (\r\n    <div className=\"home-page-wrapper\">\r\n      <div className=\"main-banner\">\r\n        <SwiperComponent\r\n          autoPlay={{\r\n            delay: 2500,\r\n            disableOnInteraction: false,\r\n          }}\r\n          loop={true}\r\n          lazy={true}\r\n          imageDelay={1000}\r\n          lazyProps={lazyLoadProps}\r\n          children={mainBanner}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Recommendations />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport get from \"get-value\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport useFetch from \"use-http\";\r\nimport * as Yup from \"yup\";\r\nimport { API_END_POINT, DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport reduxStore from \"../../redux/store\";\r\nimport { setToastMessage } from \"../../utils/utils\";\r\nimport \"./styles.scss\";\r\n\r\nconst store = get(reduxStore, \"store\", {});\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(5, \"Password is too short - should be 5 chars minimum.\"),\r\n});\r\n\r\nexport function LoginForm(props) {\r\n  const { post, response, loading, error } = useFetch(API_END_POINT);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login to PlatyPlus\";\r\n  }, []);\r\n\r\n  const HandleSignIn = async (formData) => {\r\n    const postResponse = await post(\"auth/login\", formData);\r\n    if (\r\n      get(response, \"ok\", true) &&\r\n      get(postResponse, \"status\", \"\").toLowerCase() !== \"error\"\r\n    ) {\r\n      store.dispatch({\r\n        type: \"LOGINUSER\",\r\n        payload: {\r\n          username: get(formData, \"username\", \"\"),\r\n          token: get(postResponse, \"token\", \"\"),\r\n        },\r\n      });\r\n      setToastMessage({\r\n        status: \"success\",\r\n        message: \"Login SuccessFully\",\r\n      });\r\n      props.history.push(DOMAINPATH);\r\n    } else {\r\n      setToastMessage({\r\n        status: \"fail\",\r\n        message: \"Login Failed !!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <Row>\r\n        <h1 className=\"mt-5 text-center\">Welcome</h1>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col lg=\"6\">\r\n          <Formik\r\n            initialValues={{ username: \"johnd\", password: \"m38rmF$\" }}\r\n            validationSchema={loginSchema}\r\n            onSubmit={HandleSignIn}\r\n          >\r\n            {({ touched, errors }) => (\r\n              <Form>\r\n                <FormGroup>\r\n                  <FormLabel htmlFor=\"username\">User Name</FormLabel>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Enter user name\"\r\n                    className={`form-control ${\r\n                      touched.email && errors.email ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage\r\n                    component=\"div\"\r\n                    name=\"username\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                  <Field\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    className={`form-control ${\r\n                      touched.password && errors.password ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage\r\n                    component=\"div\"\r\n                    name=\"password\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </FormGroup>\r\n                <Button variant=\"outline-dark\" type=\"submit\" className=\"w-100\">\r\n                  {loading ? \"Loading...\" : \"Submit\"}\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import Page404 from \"./Page404\";\r\nexport default Page404;\r\n","import React from \"react\";\r\nconst Page404 = (props) => {\r\n  console.log(\"props \", props);\r\n  return <h1>404 </h1>;\r\n};\r\nexport default Page404;\r\n","import get from \"get-value\";\r\nimport React from \"react\";\r\nimport { Col, Row, Container, Image } from \"react-bootstrap\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport useFetch from \"use-http\";\r\nimport { API_END_POINT } from \"../../redux/ActionTypes\";\r\nimport ReactImageZoom from \"react-image-zoom\";\r\nimport \"./productLeftStyles.scss\";\r\nimport { ImageLoadingHolder } from \"../../assets/svg\";\r\n\r\nexport const ProductLeftPart = (props) => {\r\n  const productResponse = get(props, \"productResponse\", {});\r\n  const fallBackImage = `https://placeholder.pics/svg/400/000000-2DFFA5/FFFFFF-FFFFFF/${encodeURIComponent(\r\n    \"Sorry Image not Available\"\r\n  )}`;\r\n  const imageProps = {\r\n    zoomWidth: 400,\r\n    width: 400,\r\n    img: get(productResponse, \"image\", fallBackImage),\r\n    zoomPosition: \"original\",\r\n    offset: { vertical: 0, horizontal: 10 },\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"pdp-image-wrapper\">\r\n        {get(productResponse, \"image\", \"\") && (\r\n          <LazyLoad\r\n            placeholder={\r\n              <ImageLoadingHolder className={\"product-image-loader\"} />\r\n            }\r\n            debounce={400}\r\n            height={\"400px\"}\r\n            once={true}\r\n          >\r\n            <Image\r\n              src={get(productResponse, \"image\", \"\")}\r\n              alt={get(productResponse, \"title\", \"\")}\r\n            />\r\n          </LazyLoad>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import get from \"get-value\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CartIcon } from \"../../assets/svg\";\r\nimport reduxStore from \"../../redux/store\";\r\nimport { AddCart } from \"../../redux/Actions\";\r\nimport \"./productRightStyles.scss\";\r\nimport \"./styles.scss\";\r\n\r\nconst store = get(reduxStore, \"store\", {});\r\n\r\nconst ProductRightPart = (props) => {\r\n  const productResponse = get(props, \"productResponse\", {});\r\n  const loading = get(props, \"loading\", false);\r\n\r\n  const addToCartButtonClick = (item = {}) => {\r\n    const addToCartDom = document.querySelector(\".add-to-cart-button\");\r\n    if (addToCartDom) {\r\n      addToCartDom.classList.add(\"added\");\r\n      setTimeout(function () {\r\n        addToCartDom.classList.remove(\"added\");\r\n      }, 2000);\r\n    }\r\n    const addToCart = get(props, \"AddCart\", () => {});\r\n    addToCart(get(item, \"productResponse\", {}));\r\n  };\r\n\r\n  const renderPrice = () => {\r\n    const salePrice = get(productResponse, \"price\", 0);\r\n    const originalPrice = (salePrice + 0.3 * salePrice).toFixed(2); // Bumping price by 30%\r\n    return (\r\n      <div className=\"pdp-price-wrapper\">\r\n        <div className=\"pdp-sale-price\">{\"$\" + salePrice}</div>\r\n        <div className=\"pdp-original-price strikethrough\">\r\n          {\"$\" + originalPrice}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdp-right\">\r\n      <div className=\"pdp-title\">{get(productResponse, \"title\", \"\")}</div>\r\n      <div className=\"pdp-price\">{renderPrice()}</div>\r\n      <div className=\"pdp-desc\">{get(productResponse, \"description\", \"\")}</div>\r\n      {!loading && (\r\n        <button\r\n          onClick={() => addToCartButtonClick({ productResponse })}\r\n          className=\"add-to-cart-button\"\r\n        >\r\n          <CartIcon />\r\n          <span className=\"add-to-cart\">Add to cart</span>\r\n          <span className=\"added-to-cart\">Added to cart</span>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userDetails: state?.userDetails,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    AddCart: (item) => dispatch(AddCart(item)),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductRightPart);\r\n","import get from \"get-value\";\r\nimport React from \"react\";\r\nimport { Col, Row, Container, Breadcrumb } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport useFetch from \"use-http\";\r\nimport { LoadingSpinner } from \"../../assets/svg\";\r\nimport { API_END_POINT, DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport { ProductLeftPart } from \"./ProductLeftPart\";\r\nimport ProductRightPart from \"./ProductRightPart\";\r\nimport \"./styles.scss\";\r\n\r\nconst Product = (props) => {\r\n  const { get: getResponse, response, loading } = useFetch(API_END_POINT);\r\n  const [productResponse, setProductResponse] = React.useState([]);\r\n  const productId = decodeURIComponent(\r\n    get(props, \"match.params.productId\", \"\")\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    getProductResponse();\r\n  }, [productId]);\r\n\r\n  const getProductResponse = async () => {\r\n    const productResponse = await getResponse(`/products/${productId}`);\r\n    if (response.ok) {\r\n      setProductResponse(productResponse);\r\n    }\r\n  };\r\n\r\n  const propsToPass = {\r\n    productResponse,\r\n    ...props,\r\n  };\r\n  const renderBreadCrumb = () => {\r\n    const categoryName = get(productResponse, \"category\", \"\");\r\n    return (\r\n      <Breadcrumb>\r\n        <LinkContainer to={`${DOMAINPATH}`}>\r\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        </LinkContainer>\r\n        <LinkContainer\r\n          to={`${DOMAINPATH}/category/${encodeURIComponent(categoryName)}`}\r\n        >\r\n          <Breadcrumb.Item>{categoryName}</Breadcrumb.Item>\r\n        </LinkContainer>\r\n        <Breadcrumb.Item active>\r\n          {get(productResponse, \"title\", \"\")}\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n  console.log(\"loading \", loading);\r\n\r\n  return (\r\n    <Container className=\"pdp-container my-5\">\r\n      {loading ? (\r\n        <LoadingSpinner className=\"pdp-loading-spinner d-flex justify-content-center\" />\r\n      ) : (\r\n        <React.Fragment>\r\n          <Row>{renderBreadCrumb()}</Row>\r\n          <Row>\r\n            <Col lg={6} md={6} sm={12} className=\"pdp-left\">\r\n              {ProductLeftPart(propsToPass)}\r\n            </Col>\r\n            <Col lg={6} md={6} sm={12} className=\"pdp-right\">\r\n              <ProductRightPart {...propsToPass} />\r\n            </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button, Col, InputGroup, Row, Form } from \"react-bootstrap\";\r\n// import Form from \"react-bootstrap/Form\";\r\nimport * as Yup from \"yup\";\r\n// import \"./styles.scss\";\r\nimport { Container, FormGroup, FormLabel, FormControl } from \"react-bootstrap\";\r\nimport { ErrorMessage, Field } from \"formik\";\r\nimport get from \"get-value\";\r\n\r\nconst schema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, \"*Names must have at least 2 characters\")\r\n    .max(100, \"*Names can't be longer than 100 characters\")\r\n    .required(\"*Name is required\"),\r\n  lastName: Yup.string().required(),\r\n  address: Yup.string().required(),\r\n  address2: Yup.string(),\r\n  city: Yup.string().required(),\r\n  state: Yup.string().required(),\r\n  zip: Yup.string().required(),\r\n  terms: Yup.bool().required().oneOf([true], \"Terms must be accepted\"),\r\n});\r\n\r\nconst AddressForm = (props = {}) => {\r\n  const { prefillData = {} } = props;\r\n\r\n  const onSubmit = async (values, formikProps) => {\r\n    const { setSubmitting, resetForm } = formikProps;\r\n    const { onAddressSubmit = () => {} } = props;\r\n    setSubmitting(true);\r\n    onAddressSubmit(values);\r\n    // setTimeout(() => {\r\n    //   console.log(\"resolved timeout at onSubmit\");\r\n    // }, 5000);\r\n    // resetForm();\r\n    setSubmitting(false);\r\n  };\r\n  console.log(\"prefillData \", prefillData);\r\n  return (\r\n    <div className={\"address-form d-flex justify-content-center my-3\"}>\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          firstName: get(prefillData, \"firstName\", \"\"),\r\n          lastName: get(prefillData, \"lastName\", \"\"),\r\n          address: get(prefillData, \"address\", \"\"),\r\n          address2: get(prefillData, \"address2\", \"\"),\r\n          city: get(prefillData, \"city\", \"\"),\r\n          state: get(prefillData, \"state\", \"\"),\r\n          zip: get(prefillData, \"zip\", \"\"),\r\n          email: get(prefillData, \"email\", \"\"),\r\n          terms: get(prefillData, \"terms\", false),\r\n        }}\r\n      >\r\n        {(formikProps = {}) => {\r\n          const {\r\n            handleSubmit,\r\n            handleChange,\r\n            handleBlur,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n            isSubmitting,\r\n          } = formikProps;\r\n          console.log(\"values \", values);\r\n          return (\r\n            <Form style={{ maxWidth: \"80%\" }} onSubmit={handleSubmit}>\r\n              <Row className=\"mb-3\">\r\n                <Form.Group md=\"6\" as={Col} controlId=\"validationFormik01\">\r\n                  <Form.Label>First name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    placeholder=\"John\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={!!errors.address}\r\n                    isValid={touched.firstName && !errors.firstName}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type={!errors.firstName ? \"valid\" : \"invalid\"}\r\n                  >\r\n                    {!errors.firstName ? \"Looks good!\" : errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik02\">\r\n                  <Form.Label>Last name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    placeholder=\"Doe\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={!!errors.lastName}\r\n                    isValid={touched.lastName && !errors.lastName}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type={!errors.lastName ? \"valid\" : \"invalid\"}\r\n                  >\r\n                    {!errors.lastName ? \"Nice\" : errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormikAddress\">\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"1234 Main St\"\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    name=\"address\"\r\n                    value={values.address}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.address}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.address}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"6\">\r\n                  <Form.Label>Address 2</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Apartment, studio, or floor\"\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    name=\"address2\"\r\n                    value={values.address2}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.address2}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    value={values.city}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.city}\r\n                  />\r\n\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.city}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\r\n                  <Form.Label>State</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"State\"\r\n                    name=\"state\"\r\n                    value={values.state}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.state}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.state}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\r\n                  <Form.Label>Zip</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Zip\"\r\n                    name=\"zip\"\r\n                    value={values.zip}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.zip}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.zip}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3 justify-content-between\">\r\n                <Form.Group as={Col} md=\"5\">\r\n                  <Form.Check\r\n                    name=\"terms\"\r\n                    label=\"Agree to terms and conditions\"\r\n                    checked={values.terms}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.terms}\r\n                    feedback={errors.terms}\r\n                    id=\"validationFormik0\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"4\" className=\"text-end\">\r\n                  <Button disabled={isSubmitting} variant=\"dark\" type=\"submit\">\r\n                    Save and Continue\r\n                  </Button>\r\n                </Form.Group>\r\n              </Row>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { AddressForm };\r\n","import { AddressForm } from \"./AddressForm\";\r\nexport default AddressForm;\r\n","// This example shows you how to set up React Stripe.js and use Elements.\r\n// Learn how to accept a payment using the official Stripe docs.\r\n// https://www.stripe.com/docs/payments/integration-builder\r\n//https://codesandbox.io/s/omfb3?file=/src/App.js\r\n//https://github.com/stripe/react-stripe-js/issues/109\r\nimport React, { useState } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst CARD_OPTIONS = {\r\n  iconStyle: \"solid\",\r\n  style: {\r\n    base: {\r\n      iconColor: \"#c4f0ff\",\r\n      color: \"#fff\",\r\n      fontWeight: 500,\r\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n      fontSize: \"16px\",\r\n      fontSmoothing: \"antialiased\",\r\n      \":-webkit-autofill\": {\r\n        color: \"#fce883\",\r\n      },\r\n      \"::placeholder\": {\r\n        color: \"#87bbfd\",\r\n      },\r\n    },\r\n    invalid: {\r\n      iconColor: \"#ffc7ee\",\r\n      color: \"#ffc7ee\",\r\n    },\r\n  },\r\n};\r\n\r\nconst CardField = ({ onChange }) => (\r\n  <div className=\"FormRow\">\r\n    <CardElement options={CARD_OPTIONS} onChange={onChange} />\r\n  </div>\r\n);\r\n\r\nconst Field = ({\r\n  label,\r\n  id,\r\n  type,\r\n  placeholder,\r\n  required,\r\n  autoComplete,\r\n  value,\r\n  onChange,\r\n}) => (\r\n  <div className=\"FormRow\">\r\n    <label htmlFor={id} className=\"FormRowLabel\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      className=\"FormRowInput\"\r\n      id={id}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      required={required}\r\n      autoComplete={autoComplete}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst SubmitButton = ({ processing, error, children, disabled }) => (\r\n  <button\r\n    className={`SubmitButton ${error ? \"SubmitButton--error\" : \"\"}`}\r\n    type=\"submit\"\r\n    disabled={processing || disabled}\r\n  >\r\n    {processing ? \"Processing...\" : children}\r\n  </button>\r\n);\r\n\r\nconst ErrorMessage = ({ children }) => (\r\n  <div className=\"ErrorMessage\" role=\"alert\">\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 17 17\">\r\n      <path\r\n        fill=\"#FFF\"\r\n        d=\"M8.5,17 C3.80557963,17 0,13.1944204 0,8.5 C0,3.80557963 3.80557963,0 8.5,0 C13.1944204,0 17,3.80557963 17,8.5 C17,13.1944204 13.1944204,17 8.5,17 Z\"\r\n      />\r\n      <path\r\n        fill=\"#6772e5\"\r\n        d=\"M8.5,7.29791847 L6.12604076,4.92395924 C5.79409512,4.59201359 5.25590488,4.59201359 4.92395924,4.92395924 C4.59201359,5.25590488 4.59201359,5.79409512 4.92395924,6.12604076 L7.29791847,8.5 L4.92395924,10.8739592 C4.59201359,11.2059049 4.59201359,11.7440951 4.92395924,12.0760408 C5.25590488,12.4079864 5.79409512,12.4079864 6.12604076,12.0760408 L8.5,9.70208153 L10.8739592,12.0760408 C11.2059049,12.4079864 11.7440951,12.4079864 12.0760408,12.0760408 C12.4079864,11.7440951 12.4079864,11.2059049 12.0760408,10.8739592 L9.70208153,8.5 L12.0760408,6.12604076 C12.4079864,5.79409512 12.4079864,5.25590488 12.0760408,4.92395924 C11.7440951,4.59201359 11.2059049,4.59201359 10.8739592,4.92395924 L8.5,7.29791847 L8.5,7.29791847 Z\"\r\n      />\r\n    </svg>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst ResetButton = ({ onClick }) => (\r\n  <button type=\"button\" className=\"ResetButton\" onClick={onClick}>\r\n    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\r\n      <path\r\n        fill=\"#FFF\"\r\n        d=\"M15,7.05492878 C10.5000495,7.55237307 7,11.3674463 7,16 C7,20.9705627 11.0294373,25 16,25 C20.9705627,25 25,20.9705627 25,16 C25,15.3627484 24.4834055,14.8461538 23.8461538,14.8461538 C23.2089022,14.8461538 22.6923077,15.3627484 22.6923077,16 C22.6923077,19.6960595 19.6960595,22.6923077 16,22.6923077 C12.3039405,22.6923077 9.30769231,19.6960595 9.30769231,16 C9.30769231,12.3039405 12.3039405,9.30769231 16,9.30769231 L16,12.0841673 C16,12.1800431 16.0275652,12.2738974 16.0794108,12.354546 C16.2287368,12.5868311 16.5380938,12.6540826 16.7703788,12.5047565 L22.3457501,8.92058924 L22.3457501,8.92058924 C22.4060014,8.88185624 22.4572275,8.83063012 22.4959605,8.7703788 C22.6452866,8.53809377 22.5780351,8.22873685 22.3457501,8.07941076 L22.3457501,8.07941076 L16.7703788,4.49524351 C16.6897301,4.44339794 16.5958758,4.41583275 16.5,4.41583275 C16.2238576,4.41583275 16,4.63969037 16,4.91583275 L16,7 L15,7 L15,7.05492878 Z M16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 Z\"\r\n      />\r\n    </svg>\r\n  </button>\r\n);\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [cardComplete, setCardComplete] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [paymentMethod, setPaymentMethod] = useState(null);\r\n  const [billingDetails, setBillingDetails] = useState({\r\n    email: \"\",\r\n    phone: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    if (error) {\r\n      elements.getElement(\"card\").focus();\r\n      return;\r\n    }\r\n\r\n    if (cardComplete) {\r\n      setProcessing(true);\r\n    }\r\n\r\n    const payload = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n      billing_details: billingDetails,\r\n    });\r\n\r\n    setProcessing(false);\r\n\r\n    if (payload.error) {\r\n      setError(payload.error);\r\n    } else {\r\n      setPaymentMethod(payload.paymentMethod);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setError(null);\r\n    setProcessing(false);\r\n    setPaymentMethod(null);\r\n    setBillingDetails({\r\n      email: \"\",\r\n      phone: \"\",\r\n      name: \"\",\r\n    });\r\n  };\r\n\r\n  return paymentMethod ? (\r\n    <div className=\"Result\">\r\n      <div className=\"ResultTitle\" role=\"alert\">\r\n        Payment successful\r\n      </div>\r\n      <div className=\"ResultMessage\">\r\n        Thanks for trying Stripe Elements. No money was charged, but we\r\n        generated a PaymentMethod: {paymentMethod.id}\r\n      </div>\r\n      <ResetButton onClick={reset} />\r\n    </div>\r\n  ) : (\r\n    <form className=\"Form\" onSubmit={handleSubmit}>\r\n      <fieldset className=\"FormGroup\">\r\n        <Field\r\n          label=\"Name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Jane Doe\"\r\n          required\r\n          autoComplete=\"name\"\r\n          value={billingDetails.name}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, name: e.target.value });\r\n          }}\r\n        />\r\n        <Field\r\n          label=\"Email\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"janedoe@gmail.com\"\r\n          required\r\n          autoComplete=\"email\"\r\n          value={billingDetails.email}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, email: e.target.value });\r\n          }}\r\n        />\r\n        <Field\r\n          label=\"Phone\"\r\n          id=\"phone\"\r\n          type=\"tel\"\r\n          placeholder=\"(941) 555-0123\"\r\n          required\r\n          autoComplete=\"tel\"\r\n          value={billingDetails.phone}\r\n          onChange={(e) => {\r\n            setBillingDetails({ ...billingDetails, phone: e.target.value });\r\n          }}\r\n        />\r\n      </fieldset>\r\n      <fieldset className=\"FormGroup\">\r\n        <CardField\r\n          onChange={(e) => {\r\n            setError(e.error);\r\n            setCardComplete(e.complete);\r\n          }}\r\n        />\r\n      </fieldset>\r\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\r\n      <SubmitButton processing={processing} error={error} disabled={!stripe}>\r\n        Pay $25\r\n      </SubmitButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ELEMENTS_OPTIONS = {\r\n  fonts: [\r\n    {\r\n      cssSrc: \"https://fonts.googleapis.com/css?family=Roboto\",\r\n    },\r\n  ],\r\n};\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\r\n\r\nconst PaymentSection = () => {\r\n  return (\r\n    <div className=\"payment-wrapper\">\r\n      <Elements stripe={stripePromise} options={ELEMENTS_OPTIONS}>\r\n        <CheckoutForm />\r\n      </Elements>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSection;\r\n","import React, { Component } from \"react\";\r\nimport AddressForm from \"../../components/AddressForm\";\r\nimport PaymentSection from \"../../components/Payment/PaymentSection\";\r\nimport CartProductList from \"../../components/CartProductList/CartProductList\";\r\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\"; // ES6\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  FormControl,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport \"./styles.scss\";\r\n\r\nconst Checkout = (props = {}) => {\r\n  const [activeIndex, setActiveIndex] = React.useState(0);\r\n  const [addressData, setAddressData] = React.useState({});\r\n  const reviewItemProps = {\r\n    showTitle: false,\r\n    showCartIndex: false,\r\n    showImage: false,\r\n    fromCheckOut: true,\r\n  };\r\n  const onAddressSubmit = (data = {}) => {\r\n    setAddressData(data);\r\n    setActiveIndex(1);\r\n  };\r\n\r\n  const renderCheckOutSection = (index) => {\r\n    switch (index) {\r\n      case 1:\r\n        return (\r\n          <div className=\"review-items\">\r\n            <h1 className=\"my-3\">Review Your Items</h1>\r\n            <CartProductList {...reviewItemProps} {...props} />\r\n            <div>\r\n              <Button onClick={() => setActiveIndex(0)}>Go Back</Button>\r\n              <Button onClick={() => setActiveIndex(2)}>\r\n                Continue to Payment\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return <PaymentSection />;\r\n\r\n      default:\r\n        return (\r\n          <div className={\"checkout-address-wrapper\"}>\r\n            <AddressForm\r\n              prefillData={addressData}\r\n              onAddressSubmit={onAddressSubmit}\r\n              {...props}\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"checkout-wrapper\"}>\r\n      <SwitchTransition\r\n        transitionName=\"section\"\r\n        mode=\"out-in\"\r\n        transitionEnterTimeout={500}\r\n        transitionLeaveTimeout={300}\r\n      >\r\n        <CSSTransition\r\n          key={activeIndex}\r\n          addEndListener={(node, done) => {\r\n            node.addEventListener(\"transitionend\", done, false);\r\n          }}\r\n          classNames=\"section\"\r\n        >\r\n          {renderCheckOutSection(activeIndex)}\r\n        </CSSTransition>\r\n      </SwitchTransition>\r\n    </div>\r\n  );\r\n};\r\nexport default Checkout;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PLP from \"../pages/PLP/PLP\";\r\nimport HomePage from \"../pages/HomePage/HomePage\";\r\nimport { LoginForm } from \"../pages/Login/Login\";\r\nimport Page404 from \"../pages/Page404\";\r\nimport Product from \"../pages/Product/Product\";\r\nimport Checkout from \"../pages/Checkout/Checkout\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\n// const LoadableComponent = loadable((props) => import(`../pages/${props.path}`));\r\n\r\n// const routerChildren = () => {\r\n//   const routeChild = pathParams.map((pathWay, index) => {\r\n//     const exactPath = get(pathWay, \"exact\", false);\r\n//     return (\r\n//       <Route\r\n//         exact={exactPath}\r\n//         key={index}\r\n//         path={pathWay?.path}\r\n//         render={(routerProps) => {\r\n//           return <LoadableComponent path={pathWay.pageName} {...routerProps} />;\r\n//         }}\r\n//       />\r\n//     );\r\n//   });\r\n//   routeChild.push(<Route key={pathParams.length} component={Page404} />);\r\n//   return routeChild;\r\n// };\r\n\r\nconst Routes = (props = {}) => {\r\n  console.log(\"props \", props);\r\n  // const currentKey = location.pathname.split(\"/\")[1] || \"/\";\r\n  // const timeout = { enter: 800, exit: 400 };\r\n\r\n  return (\r\n    // <TransitionGroup component=\"div\" >\r\n    //   <CSSTransition\r\n    //     key={currentKey}\r\n    //     timeout={timeout}\r\n    //     classNames=\"pageSlider\"\r\n    //     mountOnEnter={false}\r\n    //     unmountOnExit={true}\r\n    //   >\r\n    <div className=\"route-content\">\r\n      <Switch>\r\n        <Route exact path=\"/PlatyPlus\" component={HomePage} />\r\n        <Route exact path=\"/PlatyPlus/product/:productId\" component={Product} />\r\n        <Route exact path=\"/PlatyPlus/category/:categoryName\" component={PLP} />\r\n        <Route exact path=\"/PlatyPlus/login\" component={LoginForm} />\r\n        <Route exact path=\"/PlatyPlus/checkout\" component={Checkout} />\r\n        <Route path=\"*\" component={Page404} />\r\n      </Switch>\r\n    </div>\r\n    //   </CSSTransition>\r\n    // </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Header from \"../components/Header/Header\";\r\nimport { Footer } from \"../components/Footer/Footer\";\r\nimport Routes from \"./Routes\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxStore from \"../redux/store\";\r\nimport { ContextDataProvider } from \"./context/Context\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst MainPage = (props) => {\r\n  const [contextObj, setContextObj] = React.useState({ data: {} });\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={reduxStore.store}>\r\n        <PersistGate loading={null} persistor={reduxStore.persistore}>\r\n          <ContextDataProvider value={{ contextObj, setContextObj }}>\r\n            <Header />\r\n            <Routes />\r\n            <Footer />\r\n          </ContextDataProvider>\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default MainPage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport MainPage from \"./routes/MainPage\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainPage />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}