{"version":3,"sources":["redux/ActionTypes.jsx","redux/Reducer.jsx","redux/store.jsx","utils/utils.jsx","components/Header/CategoryNavBar.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","assets/svg/index.js","components/ProductInfo/ProductInfo.jsx","pages/Category/Category.jsx","components/Swiper/Swiper.jsx","pages/HomePage/HomePage.jsx","pages/Login/Login.jsx","pages/Page404/index.js","pages/Page404/Page404.jsx","pages/Product/Product.jsx","routes/Routes.jsx","routes/context/Context.js","routes/MainPage.jsx","reportWebVitals.js","index.js"],"names":["DOMAINPATH","API_END_POINT","LOGINUSER","LOGOUT","Reducer","state","action","type","userDetails","payload","persistConfig","key","storage","persistedReducer","persistReducer","createStoreWithPersistedReducer","createStore","reduxStore","store","persistore","persistStore","useDate","locale","React","useState","Date","today","setDate","useEffect","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","date","getDate","month","hour","getHours","wish","time","toLocaleTimeString","hour12","minute","setToastMessage","props","document","body","message","status","statusMark","className","aria-hidden","Fragment","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","CategoryNavBar","categoryList","setCategoryList","useFetch","getResponse","get","response","error","getAllCategory","a","categoryListResponse","ok","Nav","style","maxHeight","navbarScroll","NavDropdown","title","id","map","data","index","to","encodeURIComponent","Link","connect","Navbar","fixed","variant","expand","Brand","Toggle","aria-controls","Collapse","isEmpty","color","Button","onClick","dispatch","Form","FormControl","placeholder","aria-label","Footer","Container","Row","Col","LoadingSpinner","version","xmlns","x","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeWidth","strokeMiterlimit","strokeDasharray","cx","cy","r","attributeName","attributeType","dur","from","repeatCount","width","height","values","begin","ProductInfo","image","imageSrc","description","price","Card","Header","Image","src","alt","Body","Title","Subtitle","Text","Category","categoryResponse","setCategoryResponse","loading","categoryId","decodeURIComponent","getCategoryResponse","console","log","flexGrow","CardDeck","SwiperCore","use","EffectCoverflow","Lazy","Pagination","HomePage","loginSchema","Yup","shape","username","min","max","required","password","LoginForm","post","HandleSignIn","formData","postResponse","toLowerCase","token","history","push","lg","initialValues","validationSchema","onSubmit","touched","errors","FormGroup","FormLabel","htmlFor","name","email","component","Page404","Product","Routes","exact","path","ContextProvider","createContext","Provider","MainPage","theme","setTheme","persistor","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5abd4b26.chunk.js","sourcesContent":["export const DOMAINPATH = \"/PlatyPlus\";\r\nexport const API_END_POINT = \"https://fakestoreapi.com\";\r\nexport const LOGINUSER = \"LOGINUSER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import { LOGINUSER, LOGOUT } from \"./ActionTypes\";\r\n\r\nconst Reducer = (state = {}, action = {}) => {\r\n  switch (action.type) {\r\n    case LOGINUSER: {\r\n      return {\r\n        userDetails: { ...action.payload },\r\n        ...state,\r\n      };\r\n    }\r\n    case LOGOUT:\r\n      delete state.userDetails;\r\n      return { ...state };\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import { createStore } from \"redux\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport Reducer from \"./Reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, Reducer);\r\nlet createStoreWithPersistedReducer = createStore(persistedReducer);\r\n//https://www.npmjs.com/package/redux-persist\r\nlet persistore = persistStore(createStoreWithPersistedReducer);\r\n\r\nconst reduxStore = { store: createStoreWithPersistedReducer, persistore };\r\nexport default reduxStore;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nexport const useDate = () => {\r\n  const locale = \"en\";\r\n  const [today, setDate] = React.useState(new Date()); // Save the current date to be able to trigger an update\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      // Creates an interval which will update the current data every minute\r\n      // This will trigger a rerender every component that uses the useDate hook.\r\n      setDate(new Date());\r\n    }, 60 * 1000);\r\n    return () => {\r\n      clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n    };\r\n  }, []);\r\n\r\n  const day = today.toLocaleDateString(locale, { weekday: \"long\" });\r\n  const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, {\r\n    month: \"long\",\r\n  })}\\n\\n`;\r\n\r\n  const hour = today.getHours();\r\n  const wish = `Good ${\r\n    (hour < 12 && \"Morning\") || (hour < 17 && \"Afternoon\") || \"Evening\"\r\n  }, `;\r\n\r\n  const time = today.toLocaleTimeString(locale, {\r\n    hour: \"numeric\",\r\n    hour12: true,\r\n    minute: \"numeric\",\r\n  });\r\n\r\n  return {\r\n    date,\r\n    time,\r\n    wish,\r\n  };\r\n};\r\n\r\nexport const setToastMessage = (props) => {\r\n  ReactDOM.createPortal(<ToastContainer />, document.body);\r\n\r\n  const { message, status } = props;\r\n  const statusMark =\r\n    status === \"success\" ? (\r\n      <i className={\"fa fa-check mr-2\"} aria-hidden={true} />\r\n    ) : status === \"fail\" ? (\r\n      <i className={\"fas fa-times mr-2\"} aria-hidden={true} />\r\n    ) : status === \"warning\" ? (\r\n      <i className={\"fas fa-exclamation-triangle mr-2\"} aria-hidden={true} />\r\n    ) : (\r\n      <React.Fragment />\r\n    );\r\n\r\n  toast.dark(\r\n    <p className=\"mb-0\">\r\n      {statusMark}\r\n      {message}\r\n    </p>,\r\n    {\r\n      position: \"bottom-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      className: `${status}`,\r\n    }\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport useFetch from \"use-http\";\r\nimport { API_END_POINT, DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport \"./styles.scss\";\r\n\r\nexport const CategoryNavBar = () => {\r\n  const [categoryList, setCategoryList] = React.useState([]);\r\n  const { get: getResponse, response, error } = useFetch(API_END_POINT);\r\n\r\n  React.useEffect(() => {\r\n    getAllCategory();\r\n  }, []);\r\n\r\n  const getAllCategory = async () => {\r\n    const categoryListResponse = await getResponse(\"/products/categories\");\r\n    if (response.ok) {\r\n      setCategoryList(categoryListResponse);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Nav\r\n      className=\"category-dropdown mr-auto my-2 my-lg-0\"\r\n      style={{ maxHeight: \"100px\" }}\r\n      navbarScroll\r\n    >\r\n      <NavDropdown title=\"Category\" id={\"category-dropdown-title\"}>\r\n        {error ? (\r\n          <div>Error : {error}</div>\r\n        ) : (\r\n          categoryList?.map((data, index) => {\r\n            return (\r\n              <LinkContainer\r\n                key={data + index}\r\n                to={`${DOMAINPATH}/category/${encodeURIComponent(data)}`}\r\n              >\r\n                <Nav.Link className=\"px-3 text-capitalize\">{data}</Nav.Link>\r\n              </LinkContainer>\r\n            );\r\n          })\r\n        )}\r\n      </NavDropdown>\r\n    </Nav>\r\n  );\r\n};\r\n","import get from \"get-value\";\r\nimport { isEmpty } from \"lodash\";\r\nimport React from \"react\";\r\nimport { Button, Form, FormControl, Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport reduxStore from \"../../redux/store\";\r\nimport { setToastMessage, useDate } from \"../../utils/utils\";\r\nimport { CategoryNavBar } from \"./CategoryNavBar\";\r\nimport \"./styles.scss\";\r\n\r\nconst store = get(reduxStore, \"store\", {});\r\n\r\nconst Header = (props) => {\r\n  const userDetails = get(props, \"userDetails\", {});\r\n  const wish = useDate().wish;\r\n  return (\r\n    <header>\r\n      <Navbar fixed=\"top\" className=\"bg-black\" variant=\"dark\" expand=\"lg\">\r\n        <Link to=\"/PlatyPlus\">\r\n          <Navbar.Brand>PlatyPlus</Navbar.Brand>\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse className=\"justify-space-between\" id=\"navbarScroll\">\r\n          <CategoryNavBar />\r\n          {isEmpty(userDetails) ? (\r\n            <Link to=\"/PlatyPlus/login\">\r\n              <Navbar.Brand>Login</Navbar.Brand>\r\n            </Link>\r\n          ) : (\r\n            <React.Fragment>\r\n              <p className=\"my-auto mr-2\" style={{ color: \"white\" }}>\r\n                {wish + \" Praveen\"}\r\n              </p>\r\n              <Button\r\n                className=\"mr-2\"\r\n                variant=\"outline-light\"\r\n                onClick={() => {\r\n                  store.dispatch({ type: \"LOGOUT\" });\r\n                  setToastMessage({\r\n                    status: \"success\",\r\n                    message: \"User Signed Out\",\r\n                  });\r\n                }}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n          <Form className=\"d-flex\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"outline-light\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userDetails: state?.userDetails,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Container,\r\n  Navbar,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport \"./styles.scss\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDate } from \"../../utils/utils\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer className=\"main-footer bg-black\">\r\n      <Container>\r\n        <Navbar className=\"bg-black\" variant=\"dark\">\r\n          <Nav className=\"w-100\">\r\n            <Row className=\"d-flex w-100 text-center\">\r\n              <Col>\r\n                <Nav.Link>{useDate().date + \" \" + useDate().time}</Nav.Link>\r\n              </Col>\r\n              <Col>\r\n                <ul className=\"list-inline social-buttons\">\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-facebook-f\"></i>{\" \"}\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className=\"list-inline-item\">\r\n                    <LinkContainer to=\"#\">\r\n                      <Nav.Link>\r\n                        <i className=\"fab fa-linkedin-in\"></i>{\" \"}\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                </ul>{\" \"}\r\n              </Col>\r\n            </Row>\r\n          </Nav>\r\n        </Navbar>\r\n      </Container>\r\n      <ToastContainer />\r\n    </footer>\r\n  );\r\n};\r\n","import get from \"get-value\";\r\n\r\nexport const LoadingSpinner = (props) => {\r\n  const className = get(props, \"className\", \"\");\r\n  return (\r\n    <div className={className}>\r\n      <svg\r\n        version=\"1.1\"\r\n        id=\"L1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 100 100\"\r\n        enableBackground=\"new 0 0 100 100\"\r\n        xmlSpace=\"preserve\"\r\n      >\r\n        <circle\r\n          fill=\"none\"\r\n          stroke=\"#212529\"\r\n          strokeWidth=\"6\"\r\n          strokeMiterlimit=\"15\"\r\n          strokeDasharray=\"14.2472,14.2472\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"47\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            attributeType=\"XML\"\r\n            type=\"rotate\"\r\n            dur=\"5s\"\r\n            from=\"0 50 50\"\r\n            to=\"360 50 50\"\r\n            repeatCount=\"indefinite\"\r\n          ></animateTransform>\r\n        </circle>\r\n        <circle\r\n          fill=\"none\"\r\n          stroke=\"#212529\"\r\n          strokeWidth=\"1\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeDasharray=\"10,10\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"39\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            attributeType=\"XML\"\r\n            type=\"rotate\"\r\n            dur=\"5s\"\r\n            from=\"0 50 50\"\r\n            to=\"-360 50 50\"\r\n            repeatCount=\"indefinite\"\r\n          ></animateTransform>\r\n        </circle>\r\n        <g fill=\"#212529\">\r\n          <rect x=\"30\" y=\"35\" width=\"5\" height=\"30\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.1\"\r\n            ></animateTransform>\r\n          </rect>\r\n          <rect x=\"40\" y=\"35\" width=\"5\" height=\"30\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.2\"\r\n            ></animateTransform>\r\n          </rect>\r\n          <rect x=\"50\" y=\"35\" width=\"5\" height=\"30\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.3\"\r\n            ></animateTransform>\r\n          </rect>\r\n          <rect x=\"60\" y=\"35\" width=\"5\" height=\"30\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.4\"\r\n            ></animateTransform>\r\n          </rect>\r\n          <rect x=\"70\" y=\"35\" width=\"5\" height=\"30\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              dur=\"1s\"\r\n              type=\"translate\"\r\n              values=\"0 5 ; 0 -5; 0 5\"\r\n              repeatCount=\"indefinite\"\r\n              begin=\"0.5\"\r\n            ></animateTransform>\r\n          </rect>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","import get from \"get-value\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Image, Card, CardDeck } from \"react-bootstrap\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport \"./styles.scss\";\r\n\r\nconst ProductInfo = (props) => {\r\n  const {\r\n    image: imageSrc = \"\",\r\n    title = \"\",\r\n    description = \"\",\r\n    price = \"\",\r\n  } = get(props, \"data\", {});\r\n  return (\r\n    <Card className=\"text-center\">\r\n      <Card.Header>\r\n        <LazyLoad className={\"h-100\"} height={\"250px\"}>\r\n          <Image src={imageSrc} alt={title} />\r\n        </LazyLoad>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{title}</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">{description}</Card.Subtitle>\r\n        <Card.Text></Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-muted\">{`Price $${price}`}</Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;\r\n","import get from \"get-value\";\r\nimport React from \"react\";\r\nimport { CardDeck, Col, Row } from \"react-bootstrap\";\r\nimport { lazyload } from \"react-lazyload\";\r\nimport useFetch from \"use-http\";\r\nimport { LoadingSpinner } from \"../../assets/svg\";\r\nimport ProductInfo from \"../../components/ProductInfo/ProductInfo\";\r\nimport { API_END_POINT } from \"../../redux/ActionTypes\";\r\nimport \"./styles.scss\";\r\n\r\nconst Category = (props) => {\r\n  const [categoryResponse, setCategoryResponse] = React.useState([]);\r\n  const {\r\n    get: getResponse,\r\n    response,\r\n    error,\r\n    loading,\r\n  } = useFetch(API_END_POINT);\r\n  const categoryId = decodeURIComponent(\r\n    get(props, \"match.params.categoryName\", \"\")\r\n  );\r\n  React.useEffect(() => {\r\n    getCategoryResponse();\r\n    console.log(\"categoryId \", categoryId);\r\n  }, [categoryId]);\r\n\r\n  const getCategoryResponse = async () => {\r\n    const categoryResponse = await getResponse(\r\n      `/products/category/${categoryId}`\r\n    );\r\n    if (response.ok) {\r\n      setCategoryResponse(categoryResponse);\r\n    }\r\n  };\r\n  const swiperProps = {\r\n    effect: \"coverflow\",\r\n    grabCursor: true,\r\n    centeredSlides: true,\r\n    slidesPerView: \"auto\",\r\n    coverflowEffect: {\r\n      rotate: 50,\r\n      stretch: 0,\r\n      depth: 100,\r\n      modifier: 1,\r\n      slideShadows: false,\r\n    },\r\n    // slidesPerView: 3,\r\n    // slidesPerColumn: 2,\r\n    // spaceBetween: 10,\r\n  };\r\n\r\n  return (\r\n    <div className=\"catalog-container\">\r\n      {loading ? (\r\n        <LoadingSpinner className=\"catalog-loading-spinner d-flex justify-content-center\" />\r\n      ) : (\r\n        <Row>\r\n          <Col></Col>\r\n          <Col style={{ flexGrow: 5 }}>\r\n            <CardDeck className=\"plp-wrapper my-5\">\r\n              {categoryResponse.map((data) => {\r\n                return <ProductInfo data={data} />;\r\n              })}\r\n            </CardDeck>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Category;\r\n","import React, { useRef, useState } from \"react\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\nimport \"swiper/components/lazy/lazy.scss\";\r\nimport \"swiper/components/navigation/navigation.min.css\";\r\n\r\nimport \"./styles.scss\";\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, { Lazy, EffectCoverflow, Pagination } from \"swiper/core\";\r\nimport get from \"get-value\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([EffectCoverflow, Lazy, Pagination]);\r\n\r\nexport default function SwiperComponent(props) {\r\n  const swiperProps = get(props, \"swiperProps\", {});\r\n  const children = get(props, \"children\", []);\r\n  return (\r\n    <React.Fragment>\r\n      <Swiper\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n        className=\"mySwiper\"\r\n        {...swiperProps}\r\n        style={{\r\n          \"--swiper-navigation-color\": \"#fff\",\r\n          \"--swiper-pagination-color\": \"#fff\",\r\n        }}\r\n        lazy={true}\r\n      >\r\n        {children?.map((data, index) => {\r\n          return (\r\n            <SwiperSlide key=\"index\">\r\n              <Image data-src={data} className=\"swiper-lazy\" alt={\"\"} />\r\n              <div className=\"swiper-lazy-preloader swiper-lazy-preloader-white\" />\r\n            </SwiperSlide>\r\n          );\r\n        })}\r\n      </Swiper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SwiperComponent from \"../../components/Swiper/Swiper\";\r\nimport \"./styles.scss\";\r\n\r\nconst HomePage = (props) => {\r\n  useEffect(() => {\r\n    document.title = \"Welcome User\";\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <div>Welcome to Home</div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport get from \"get-value\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport useFetch from \"use-http\";\r\nimport * as Yup from \"yup\";\r\nimport { API_END_POINT, DOMAINPATH } from \"../../redux/ActionTypes\";\r\nimport reduxStore from \"../../redux/store\";\r\nimport { setToastMessage } from \"../../utils/utils\";\r\n\r\nconst store = get(reduxStore, \"store\", {});\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(5, \"Password is too short - should be 5 chars minimum.\"),\r\n});\r\n\r\nexport function LoginForm(props) {\r\n  const { post, response, loading, error } = useFetch(API_END_POINT);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login to PlatyPlus\";\r\n  }, []);\r\n\r\n  const HandleSignIn = async (formData) => {\r\n    const postResponse = await post(\"auth/login\", formData);\r\n    if (\r\n      get(response, \"ok\", true) &&\r\n      get(postResponse, \"status\", \"\").toLowerCase() !== \"error\"\r\n    ) {\r\n      store.dispatch({\r\n        type: \"LOGINUSER\",\r\n        payload: {\r\n          username: get(formData, \"username\", \"\"),\r\n          token: get(postResponse, \"token\", \"\"),\r\n        },\r\n      });\r\n      setToastMessage({\r\n        status: \"success\",\r\n        message: \"Login SuccessFully\",\r\n      });\r\n      props.history.push(DOMAINPATH);\r\n    } else {\r\n      setToastMessage({\r\n        status: \"fail\",\r\n        message: \"Login Failed !!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <h1 className=\"mt-5 text-center\">Welcome</h1>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col lg=\"6\">\r\n          <Formik\r\n            initialValues={{ username: \"johnd\", password: \"m38rmF$\" }}\r\n            validationSchema={loginSchema}\r\n            onSubmit={HandleSignIn}\r\n          >\r\n            {({ touched, errors }) => (\r\n              <Form>\r\n                <FormGroup>\r\n                  <FormLabel htmlFor=\"username\">User Name</FormLabel>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Enter user name\"\r\n                    className={`form-control ${\r\n                      touched.email && errors.email ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage\r\n                    component=\"div\"\r\n                    name=\"username\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                  <Field\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    className={`form-control ${\r\n                      touched.password && errors.password ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage\r\n                    component=\"div\"\r\n                    name=\"password\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </FormGroup>\r\n                <Button variant=\"outline-dark\" type=\"submit\" className=\"w-100\">\r\n                  {loading ? \"Loading...\" : \"Submit\"}\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import Page404 from \"./Page404\";\r\nexport default Page404;\r\n","import React from \"react\";\r\nconst Page404 = (props) => {\r\n  console.log(\"props \", props);\r\n  return <h1>404 </h1>;\r\n};\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport useFetch from \"use-http\";\r\nimport { API_END_POINT } from \"../../redux/ActionTypes\";\r\n\r\nconst Product = (props) => {\r\n  const { post, response, loading, error } = useFetch(API_END_POINT);\r\n\r\n  return <div>Product</div>;\r\n};\r\nexport default Product;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Category from \"../pages/Category/Category\";\r\nimport HomePage from \"../pages/HomePage/HomePage\";\r\nimport { LoginForm } from \"../pages/Login/Login\";\r\nimport Page404 from \"../pages/Page404\";\r\nimport Product from \"../pages/Product/Product\";\r\n\r\n// const LoadableComponent = loadable((props) => import(`../pages/${props.path}`));\r\n\r\n// const routerChildren = () => {\r\n//   const routeChild = pathParams.map((pathWay, index) => {\r\n//     const exactPath = get(pathWay, \"exact\", false);\r\n//     return (\r\n//       <Route\r\n//         exact={exactPath}\r\n//         key={index}\r\n//         path={pathWay?.path}\r\n//         render={(routerProps) => {\r\n//           return <LoadableComponent path={pathWay.pageName} {...routerProps} />;\r\n//         }}\r\n//       />\r\n//     );\r\n//   });\r\n//   routeChild.push(<Route key={pathParams.length} component={Page404} />);\r\n//   return routeChild;\r\n// };\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div className=\"route-content\">\r\n      <Switch>\r\n        <Route exact path=\"/PlatyPlus\" component={HomePage} />\r\n        <Route exact path=\"/PlatyPlus/product/:productId\" component={Product} />\r\n        <Route\r\n          exact\r\n          path=\"/PlatyPlus/category/:categoryName\"\r\n          component={Category}\r\n        />\r\n        <Route exact path=\"/PlatyPlus/login\" component={LoginForm} />\r\n        <Route path=\"*\" component={Page404} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nconst Context = React.createContext();\r\nexport const ContextProvider = Context.Provider;\r\nexport default ContextProvider;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Header from \"../components/Header/Header\";\r\nimport { Footer } from \"../components/Footer/Footer\";\r\nimport Routes from \"./Routes\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxStore from \"../redux/store\";\r\nimport ContextProvider from \"./context/Context\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst MainPage = (props) => {\r\n  const [theme, setTheme] = React.useState(\"normal\");\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={reduxStore.store}>\r\n        <PersistGate loading={null} persistor={reduxStore.persistore}>\r\n          <ContextProvider value={{ theme, setTheme }}>\r\n            <Header />\r\n            <Routes />\r\n            <Footer />\r\n          </ContextProvider>\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default MainPage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport MainPage from \"./routes/MainPage\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainPage />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}